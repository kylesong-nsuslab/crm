<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <ISO8601DefaultCalendarPref />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
        <calculation class='tableau' formula='#2021-07-01#' />
      </column>
      <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
        <calculation class='tableau' formula='#2022-06-30#' />
      </column>
    </datasource>
    <datasource caption='game_poker_per_session_output' inline='true' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' version='18.1'>
      <repository-location derived-from='/t/nsusgroup/datasources/game_poker_per_session_output?rev=3.5' id='game_poker_per_session_output' path='/t/nsusgroup/datasources' revision='3.6' site='nsusgroup' />
      <connection channel='https' class='sqlproxy' dbname='game_poker_per_session_output' directory='/dataserver' port='443' server='prod-apnortheast-a.online.tableau.com' username=''>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='sqlproxy' table='[sqlproxy]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='sqlproxy' table='[sqlproxy]' type='table' />
        <metadata-records>
          <metadata-record class='measure'>
            <remote-name>applied_rake_or_fee</remote-name>
            <remote-type>5</remote-type>
            <local-name>[applied_rake_or_fee]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>applied_rake_or_fee</remote-alias>
            <ordinal>20</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>bet</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bet]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>bet</remote-alias>
            <ordinal>45</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>bet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bet_count]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>bet_count</remote-alias>
            <ordinal>46</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[blind]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>blind</remote-alias>
            <ordinal>39</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand_id]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>brand_id</remote-alias>
            <ordinal>1</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>brand_promotion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[brand_promotion]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>brand_promotion</remote-alias>
            <ordinal>28</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>buy_in</remote-name>
            <remote-type>5</remote-type>
            <local-name>[buy_in]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>buy_in</remote-alias>
            <ordinal>40</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>buy_in_cash</remote-name>
            <remote-type>5</remote-type>
            <local-name>[buy_in_cash]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>buy_in_cash</remote-alias>
            <ordinal>42</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>buy_in_gcd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[buy_in_gcd]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>buy_in_gcd</remote-alias>
            <ordinal>43</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>buy_in_gtd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[buy_in_gtd]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>buy_in_gtd</remote-alias>
            <ordinal>44</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>buy_in_initial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[buy_in_initial]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>buy_in_initial</remote-alias>
            <ordinal>41</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_id]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>country_id</remote-alias>
            <ordinal>4</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>cross_cage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cross_cage]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>cross_cage</remote-alias>
            <ordinal>34</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[currency_id]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>currency_id</remote-alias>
            <ordinal>5</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>49</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>fish_buffet_reward</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fish_buffet_reward]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>fish_buffet_reward</remote-alias>
            <ordinal>26</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[game_brand]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>game_brand</remote-alias>
            <ordinal>12</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>game_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[game_count]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>game_count</remote-alias>
            <ordinal>37</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[game_name]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>game_name</remote-alias>
            <ordinal>9</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[game_type]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>game_type</remote-alias>
            <ordinal>11</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>general_game_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[general_game_type]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>general_game_type</remote-alias>
            <ordinal>10</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gp_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gp_id]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>gp_id</remote-alias>
            <ordinal>0</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_featured</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_featured]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>is_featured</remote-alias>
            <ordinal>14</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_private</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_private]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>is_private</remote-alias>
            <ordinal>13</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_staking</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_staking]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>is_staking</remote-alias>
            <ordinal>15</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>jackpot_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[jackpot_count]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>jackpot_count</remote-alias>
            <ordinal>38</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>license_fee</remote-name>
            <remote-type>5</remote-type>
            <local-name>[license_fee]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>license_fee</remote-alias>
            <ordinal>33</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>net_stats</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_stats]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>net_stats</remote-alias>
            <ordinal>36</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>network_giveaway</remote-name>
            <remote-type>5</remote-type>
            <local-name>[network_giveaway]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>network_giveaway</remote-alias>
            <ordinal>27</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nickname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nickname]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>nickname</remote-alias>
            <ordinal>3</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>participant_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[participant_count]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>participant_count</remote-alias>
            <ordinal>48</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>poker_winloss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[poker_winloss]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>poker_winloss</remote-alias>
            <ordinal>35</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>profit_and_loss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_and_loss]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>profit_and_loss</remote-alias>
            <ordinal>23</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>profit_and_loss_poker</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_and_loss_poker]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>profit_and_loss_poker</remote-alias>
            <ordinal>24</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>profit_and_loss_side_game</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_and_loss_side_game]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>profit_and_loss_side_game</remote-alias>
            <ordinal>25</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>rake_or_fee</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rake_or_fee]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>rake_or_fee</remote-alias>
            <ordinal>21</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>ranking</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ranking]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>ranking</remote-alias>
            <ordinal>47</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>request_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[request_id]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>request_id</remote-alias>
            <ordinal>6</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>requested_at</remote-name>
            <remote-type>135</remote-type>
            <local-name>[requested_at]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>requested_at</remote-alias>
            <ordinal>8</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>1</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>requested_exchange_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[requested_exchange_rate]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>requested_exchange_rate</remote-alias>
            <ordinal>7</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>side_game_netloss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[side_game_netloss]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>side_game_netloss</remote-alias>
            <ordinal>31</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>site_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[site_id]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>site_id</remote-alias>
            <ordinal>2</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>tax_fee</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tax_fee]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>tax_fee</remote-alias>
            <ordinal>22</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>tournament_overlay_player_deducted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tournament_overlay_player_deducted]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>tournament_overlay_player_deducted</remote-alias>
            <ordinal>29</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>tournament_overlay_player_non_deducted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tournament_overlay_player_non_deducted]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>tournament_overlay_player_non_deducted</remote-alias>
            <ordinal>30</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>true_rake_or_fee</remote-name>
            <remote-type>5</remote-type>
            <local-name>[true_rake_or_fee]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>true_rake_or_fee</remote-alias>
            <ordinal>19</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>turnover</remote-name>
            <remote-type>5</remote-type>
            <local-name>[turnover]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>turnover</remote-alias>
            <ordinal>32</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user_session_finished_at</remote-name>
            <remote-type>135</remote-type>
            <local-name>[user_session_finished_at]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>user_session_finished_at</remote-alias>
            <ordinal>18</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>1</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user_session_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[user_session_id]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>user_session_id</remote-alias>
            <ordinal>16</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user_session_started_at</remote-name>
            <remote-type>135</remote-type>
            <local-name>[user_session_started_at]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>user_session_started_at</remote-alias>
            <ordinal>17</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>1</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>won_game_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[won_game_count]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>won_game_count</remote-alias>
            <ordinal>50</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='boolean' name='CAP_CREATE_TEMP_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES'>false</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_CASE_INSENSITIVE_CONTAINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_IGNORE_HINT_CHECK_NOT_NULL'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SORT_BY'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERIES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORTS_LODJOINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORT_ANALYTIC_FUNCTIONS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_TOP_N'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_USE_QUERY_FUSION'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_LEFT'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_RIGHT'>true</attribute>
              <attribute datatype='integer' name='charset'>0</attribute>
              <attribute datatype='string' name='collation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='datasource'>&quot;<![CDATA[<?xml version='1.0' encoding='utf-8' ?>

<datasource :source-version='18.1' formatted-name='Extract' inline='true' version='18.1' xml:base='http://vizportal' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location derived-from='/t/nsusgroup/datasources/game_poker_per_session_output?rev=3.5' id='game_poker_per_session_output' path='/t/nsusgroup/datasources' revision='3.6' site='nsusgroup' />
  <connection channel='https' class='sqlproxy' dbname='game_poker_per_session_output' directory='/dataserver' port='443' server='prod-apnortheast-a.online.tableau.com'>
    <relation name='sqlproxy' table='[sqlproxy]' type='table' />
    <cols>
      <map key='[applied_rake_or_fee]' value='[sqlproxy].[applied_rake_or_fee]' />
      <map key='[bet]' value='[sqlproxy].[bet]' />
      <map key='[bet_count]' value='[sqlproxy].[bet_count]' />
      <map key='[blind]' value='[sqlproxy].[blind]' />
      <map key='[brand_id]' value='[sqlproxy].[brand_id]' />
      <map key='[brand_promotion]' value='[sqlproxy].[brand_promotion]' />
      <map key='[buy_in]' value='[sqlproxy].[buy_in]' />
      <map key='[buy_in_cash]' value='[sqlproxy].[buy_in_cash]' />
      <map key='[buy_in_gcd]' value='[sqlproxy].[buy_in_gcd]' />
      <map key='[buy_in_gtd]' value='[sqlproxy].[buy_in_gtd]' />
      <map key='[buy_in_initial]' value='[sqlproxy].[buy_in_initial]' />
      <map key='[country_id]' value='[sqlproxy].[country_id]' />
      <map key='[cross_cage]' value='[sqlproxy].[cross_cage]' />
      <map key='[currency_id]' value='[sqlproxy].[currency_id]' />
      <map key='[description]' value='[sqlproxy].[description]' />
      <map key='[fish_buffet_reward]' value='[sqlproxy].[fish_buffet_reward]' />
      <map key='[game_brand]' value='[sqlproxy].[game_brand]' />
      <map key='[game_count]' value='[sqlproxy].[game_count]' />
      <map key='[game_name]' value='[sqlproxy].[game_name]' />
      <map key='[game_type]' value='[sqlproxy].[game_type]' />
      <map key='[general_game_type]' value='[sqlproxy].[general_game_type]' />
      <map key='[gp_id]' value='[sqlproxy].[gp_id]' />
      <map key='[is_featured]' value='[sqlproxy].[is_featured]' />
      <map key='[is_private]' value='[sqlproxy].[is_private]' />
      <map key='[is_staking]' value='[sqlproxy].[is_staking]' />
      <map key='[jackpot_count]' value='[sqlproxy].[jackpot_count]' />
      <map key='[license_fee]' value='[sqlproxy].[license_fee]' />
      <map key='[net_stats]' value='[sqlproxy].[net_stats]' />
      <map key='[network_giveaway]' value='[sqlproxy].[network_giveaway]' />
      <map key='[nickname]' value='[sqlproxy].[nickname]' />
      <map key='[participant_count]' value='[sqlproxy].[participant_count]' />
      <map key='[poker_winloss]' value='[sqlproxy].[poker_winloss]' />
      <map key='[profit_and_loss]' value='[sqlproxy].[profit_and_loss]' />
      <map key='[profit_and_loss_poker]' value='[sqlproxy].[profit_and_loss_poker]' />
      <map key='[profit_and_loss_side_game]' value='[sqlproxy].[profit_and_loss_side_game]' />
      <map key='[rake_or_fee]' value='[sqlproxy].[rake_or_fee]' />
      <map key='[ranking]' value='[sqlproxy].[ranking]' />
      <map key='[request_id]' value='[sqlproxy].[request_id]' />
      <map key='[requested_at]' value='[sqlproxy].[requested_at]' />
      <map key='[requested_exchange_rate]' value='[sqlproxy].[requested_exchange_rate]' />
      <map key='[side_game_netloss]' value='[sqlproxy].[side_game_netloss]' />
      <map key='[site_id]' value='[sqlproxy].[site_id]' />
      <map key='[tax_fee]' value='[sqlproxy].[tax_fee]' />
      <map key='[tournament_overlay_player_deducted]' value='[sqlproxy].[tournament_overlay_player_deducted]' />
      <map key='[tournament_overlay_player_non_deducted]' value='[sqlproxy].[tournament_overlay_player_non_deducted]' />
      <map key='[true_rake_or_fee]' value='[sqlproxy].[true_rake_or_fee]' />
      <map key='[turnover]' value='[sqlproxy].[turnover]' />
      <map key='[user_session_finished_at]' value='[sqlproxy].[user_session_finished_at]' />
      <map key='[user_session_id]' value='[sqlproxy].[user_session_id]' />
      <map key='[user_session_started_at]' value='[sqlproxy].[user_session_started_at]' />
      <map key='[won_game_count]' value='[sqlproxy].[won_game_count]' />
    </cols>
  </connection>
  <aliases enabled='yes' />
  <column aggregation='Count' datatype='string' default-type='nominal' name='[country_id]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default' />
  <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
  <semantic-values>
    <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
  </semantic-values>
</datasource>
]]>&quot;</attribute>
              <attribute datatype='string' name='dialect-definition'>&quot;<![CDATA[<dialect-definition>
  <primary-dialect class='hyper' version='0.0.0'>
  </primary-dialect>
  <overlay-dialect-set>
    <overlay-dialect class='vizengine' version='0.1.0'>
    </overlay-dialect>
  </overlay-dialect-set>
</dialect-definition>
]]>&quot;</attribute>
              <attribute datatype='boolean' name='extract-active'>false</attribute>
              <attribute datatype='boolean' name='fast-get-server-time'>true</attribute>
              <attribute datatype='string' name='update-time'>&quot;7/22/2022 1:24:26 AM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <overridable-settings>
        <date-options fiscal-year-start='january' start-of-week='sunday' />
        <default-date-format />
        <default-calendar-type>Gregorian</default-calendar-type>
      </overridable-settings>
      <aliases enabled='yes' />
      <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
      </column>
      <column caption='0' datatype='integer' name='[Calculation_1019502423262789636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0' />
      </column>
      <column caption='user_session_period_minute' datatype='real' name='[Calculation_242631487458177024]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([user_session_finished_at]-[user_session_started_at])*24*60' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='마이그레이션된 데이터' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[applied_rake_or_fee]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='None' datatype='integer' name='[bet(구간차원)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[bet]' peg='0' size='33183' />
      </column>
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[bet]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='None' datatype='integer' name='[bet_count(구간차원)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[bet_count]' peg='0' size='1045' />
      </column>
      <column aggregation='Sum' datatype='integer' default-type='ordinal' layered='true' name='[bet_count]' pivot='key' role='measure' type='ordinal' user-datatype='integer' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[blind]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[brand_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[brand_promotion]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[buy_in]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[buy_in_cash]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[buy_in_gcd]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[buy_in_gtd]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='None' datatype='integer' name='[buy_in_initial(구간차원)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[buy_in_initial]' peg='0' size='33911' />
      </column>
      <column aggregation='Sum' datatype='real' default-type='ordinal' layered='true' name='[buy_in_initial]' pivot='key' role='measure' type='ordinal' user-datatype='real' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[country_id]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[cross_cage]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[currency_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[description]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[fish_buffet_reward]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[game_brand]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[game_count]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[game_name]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[general_game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[gp_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='boolean' default-type='nominal' layered='true' name='[is_featured]' pivot='key' role='dimension' type='nominal' user-datatype='boolean' visual-totals='Default' />
      <column aggregation='Count' datatype='boolean' default-type='nominal' layered='true' name='[is_private]' pivot='key' role='dimension' type='nominal' user-datatype='boolean' visual-totals='Default' />
      <column aggregation='Count' datatype='boolean' default-type='nominal' layered='true' name='[is_staking]' pivot='key' role='dimension' type='nominal' user-datatype='boolean' visual-totals='Default' />
      <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[jackpot_count]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[license_fee]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[net_stats]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[network_giveaway]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[nickname]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[participant_count]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[poker_winloss]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[profit_and_loss]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[profit_and_loss_poker]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[profit_and_loss_side_game]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[rake_or_fee]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[ranking]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[request_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[requested_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[requested_exchange_rate]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[side_game_netloss]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[site_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[tax_fee]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[tournament_overlay_player_deducted]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[tournament_overlay_player_non_deducted]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[true_rake_or_fee]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[turnover]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[user_session_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_started_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
      <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[won_game_count]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
      <column datatype='real' name='[계산1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(MEDIAN([ranking])) - LOOKUP(ZN(MEDIAN([ranking])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column-instance column='[user_session_finished_at]' derivation='Day' name='[dy:user_session_finished_at:ok]' pivot='key' type='ordinal' />
      <column-instance column='[user_session_finished_at]' derivation='Month' name='[mn:user_session_finished_at:ok]' pivot='key' type='ordinal' />
      <column-instance column='[user_session_finished_at]' derivation='Year' name='[yr:user_session_finished_at:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[제외(년(user_session_finished_at),월(user_session_finished_at),일(user_session_finished_at))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:user_session_finished_at:ok]' />
          <groupfilter function='level-members' level='[mn:user_session_finished_at:ok]' />
          <groupfilter function='level-members' level='[dy:user_session_finished_at:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.9625' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0375' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
          <calculation class='tableau' formula='#2021-07-01#' />
        </column>
        <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
          <calculation class='tableau' formula='#2022-06-30#' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='마이그레이션된 데이터' id='Migrated Data'>
            <properties context=''>
              <relation name='sqlproxy' table='[sqlproxy]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='bet'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='None' datatype='integer' name='[bet(구간차원)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='4' formula='[bet]' peg='0' size='33183' />
            </column>
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[bet]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column-instance column='[bet]' derivation='Count' name='[cnt:bet:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[general_game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[bet(구간차원)]' derivation='None' name='[none:bet(구간차원):ok]' pivot='key' type='ordinal' />
            <column-instance column='[bet(구간차원)]' derivation='None' name='[none:bet(구간차원):qk]' pivot='key' type='quantitative' />
            <column-instance column='[general_game_type]' derivation='None' name='[none:general_game_type:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:bet(구간차원):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:bet(구간차원):ok]' />
              <groupfilter function='member' level='[none:bet(구간차원):ok]' member='0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:bet(구간차원):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk] * [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[cnt:bet:qk])</rows>
        <cols>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:bet(구간차원):qk]</cols>
        <show-full-range>
          <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:bet(구간차원):qk]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{12527DF4-9F25-4109-995D-5C89FFFC8CF3}' />
    </worksheet>
    <worksheet name='bet_count'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='Sum' datatype='integer' default-type='ordinal' layered='true' name='[bet_count]' pivot='key' role='measure' type='ordinal' user-datatype='integer' visual-totals='Default' />
            <column-instance column='[bet_count]' derivation='Count' name='[cnt:bet_count:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[general_game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[bet_count]' derivation='None' name='[none:bet_count:ok]' pivot='key' type='ordinal' />
            <column-instance column='[general_game_type]' derivation='None' name='[none:general_game_type:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk] * [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[cnt:bet_count:qk])</rows>
        <cols>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:bet_count:ok]</cols>
        <show-full-range>
          <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[bet_count(구간차원)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{366A9129-C0FC-4DCE-B649-AB64435767C8}' />
    </worksheet>
    <worksheet name='blind'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
          </datasources>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[blind]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[general_game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[blind]' derivation='None' name='[none:blind:nk]' pivot='key' type='nominal' />
            <column-instance column='[general_game_type]' derivation='None' name='[none:general_game_type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:blind:nk] / [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{4DFA3AC8-417C-4D0D-BEE9-4125036265C6}' />
    </worksheet>
    <worksheet name='brand_id, site_id - turnover'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[brand_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[brand_id]' derivation='None' name='[none:brand_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[site_id]' derivation='None' name='[none:site_id:nk]' pivot='key' type='nominal' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[site_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[turnover]' derivation='Sum' name='[sum:turnover:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[turnover]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:brand_id:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GGPCOM&quot;</bucket>
              <bucket>&quot;MBP&quot;</bucket>
              <bucket>&quot;NATURAL8&quot;</bucket>
              <bucket>&quot;POKEROK&quot;</bucket>
              <bucket>&quot;DAVAOPOKER&quot;</bucket>
              <bucket>&quot;7XL&quot;</bucket>
              <bucket>&quot;OLYBET&quot;</bucket>
              <bucket>&quot;W88&quot;</bucket>
              <bucket>&quot;GGPOKER&quot;</bucket>
              <bucket>&quot;ALLNEWPOKER&quot;</bucket>
              <bucket>&quot;TOTOGAMING&quot;</bucket>
              <bucket>&quot;SWT&quot;</bucket>
              <bucket>&quot;TNLQIPAI&quot;</bucket>
              <bucket>&quot;EWT&quot;</bucket>
              <bucket>&quot;POCKET5&quot;</bucket>
              <bucket>&quot;CSWT&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:turnover:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:brand_id:nk] / [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:site_id:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{D7FFC715-CC1A-4255-B97C-6126B417BBAC}' />
    </worksheet>
    <worksheet name='buy in cash/gcd/gtd'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[buy_in_cash]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[buy_in_gcd]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[buy_in_gtd]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[buy_in_cash]' derivation='Sum' name='[sum:buy_in_cash:qk]' pivot='key' type='quantitative' />
            <column-instance column='[buy_in_gcd]' derivation='Sum' name='[sum:buy_in_gcd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[buy_in_gtd]' derivation='Sum' name='[sum:buy_in_gtd:qk]' pivot='key' type='quantitative' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='268' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:buy_in_cash:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:buy_in_gtd:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:buy_in_gcd:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>buy_in_cash:   &lt;</run>
                <run>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:buy_in_cash:qk]</run>
                <run>&gt;&#10;buy_in_gcd:    &lt;</run>
                <run>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:buy_in_gcd:qk]</run>
                <run>&gt;&#10;buy_in_gtd:     &lt;</run>
                <run>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:buy_in_gtd:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{67B8EF26-3EBE-4AA4-9D59-75637B6A12A3}' />
    </worksheet>
    <worksheet name='buy_in_initial'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
          </datasources>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[buy_in]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='ordinal' layered='true' name='[buy_in_initial]' pivot='key' role='measure' type='ordinal' user-datatype='real' visual-totals='Default' />
            <column-instance column='[buy_in_initial]' derivation='None' name='[none:buy_in_initial:ok]' pivot='key' type='ordinal' />
            <column-instance column='[buy_in]' derivation='Sum' name='[sum:buy_in:qk]' pivot='key' type='quantitative' />
            <column-instance column='[buy_in_initial]' derivation='Sum' name='[sum:buy_in_initial:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:buy_in_initial:ok]'>
            <groupfilter function='member' level='[none:buy_in_initial:ok]' member='0.050000000000000003' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:buy_in_initial:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:buy_in_initial:ok]' value='519' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:buy_in_initial:ok]' />
            </encodings>
            <reference-line axis-column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:buy_in:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:buy_in:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.07596684992313385' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:buy_in:qk]</rows>
        <cols>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:buy_in_initial:ok]</cols>
      </table>
      <simple-id uuid='{D5AB65B9-A69A-48E3-961F-63C2E6BBA1F9}' />
    </worksheet>
    <worksheet name='counrty_cnt'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column caption='0' datatype='integer' name='[Calculation_1019502423262789636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0' />
            </column>
            <column-instance column='[country_id]' derivation='Count' name='[cnt:country_id:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[country_id]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[country_id]' derivation='CountD' name='[ctd:country_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_id]' derivation='None' name='[none:country_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1019502423262789636]' derivation='Sum' name='[sum:Calculation_1019502423262789636:qk]' pivot='key' type='quantitative' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:country_id:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[cnt:country_id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[cnt:country_id:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[cnt:country_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:Calculation_1019502423262789636:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[ctd:country_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true' total='true'>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:country_id:nk]</rows>
        <cols onLeft='true'>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[cnt:country_id:qk] + [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:Calculation_1019502423262789636:qk])</cols>
      </table>
      <simple-id uuid='{E3D164AE-0065-4EE6-B117-E0FD07065590}' />
    </worksheet>
    <worksheet name='currency_cnt'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[country_id]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[country_id]' derivation='CountD' name='[ctd:country_id:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[currency_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[currency_id]' derivation='None' name='[none:currency_id:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[ctd:country_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true'>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:currency_id:nk]</rows>
        <cols onLeft='true' />
      </table>
      <simple-id uuid='{A7B13030-53DC-45DC-B60C-A6174B603FFC}' />
    </worksheet>
    <worksheet name='financial numbers'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[applied_rake_or_fee]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[brand_promotion]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[cross_cage]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[fish_buffet_reward]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[license_fee]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[net_stats]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[network_giveaway]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[poker_winloss]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[profit_and_loss]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[profit_and_loss_poker]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[profit_and_loss_side_game]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[rake_or_fee]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[side_game_netloss]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column-instance column='[applied_rake_or_fee]' derivation='Sum' name='[sum:applied_rake_or_fee:qk]' pivot='key' type='quantitative' />
            <column-instance column='[brand_promotion]' derivation='Sum' name='[sum:brand_promotion:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cross_cage]' derivation='Sum' name='[sum:cross_cage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fish_buffet_reward]' derivation='Sum' name='[sum:fish_buffet_reward:qk]' pivot='key' type='quantitative' />
            <column-instance column='[license_fee]' derivation='Sum' name='[sum:license_fee:qk]' pivot='key' type='quantitative' />
            <column-instance column='[net_stats]' derivation='Sum' name='[sum:net_stats:qk]' pivot='key' type='quantitative' />
            <column-instance column='[network_giveaway]' derivation='Sum' name='[sum:network_giveaway:qk]' pivot='key' type='quantitative' />
            <column-instance column='[poker_winloss]' derivation='Sum' name='[sum:poker_winloss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_and_loss]' derivation='Sum' name='[sum:profit_and_loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_and_loss_poker]' derivation='Sum' name='[sum:profit_and_loss_poker:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_and_loss_side_game]' derivation='Sum' name='[sum:profit_and_loss_side_game:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rake_or_fee]' derivation='Sum' name='[sum:rake_or_fee:qk]' pivot='key' type='quantitative' />
            <column-instance column='[side_game_netloss]' derivation='Sum' name='[sum:side_game_netloss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tax_fee]' derivation='Sum' name='[sum:tax_fee:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tournament_overlay_player_deducted]' derivation='Sum' name='[sum:tournament_overlay_player_deducted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tournament_overlay_player_non_deducted]' derivation='Sum' name='[sum:tournament_overlay_player_non_deducted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[true_rake_or_fee]' derivation='Sum' name='[sum:true_rake_or_fee:qk]' pivot='key' type='quantitative' />
            <column-instance column='[turnover]' derivation='Sum' name='[sum:turnover:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[tax_fee]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[tournament_overlay_player_deducted]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[tournament_overlay_player_non_deducted]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[true_rake_or_fee]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[turnover]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:true_rake_or_fee:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:applied_rake_or_fee:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:rake_or_fee:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:tax_fee:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:fish_buffet_reward:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:profit_and_loss:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:profit_and_loss_poker:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:profit_and_loss_side_game:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:network_giveaway:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:brand_promotion:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:tournament_overlay_player_deducted:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:tournament_overlay_player_non_deducted:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:side_game_netloss:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:turnover:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:license_fee:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:poker_winloss:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:cross_cage:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:net_stats:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3E7FAD10-E071-4BAF-B269-92CF55312EDB}' />
    </worksheet>
    <worksheet name='game_count'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column caption='log(COUNT([gp_id]))' datatype='real' name='[Calculation_635570555647553536]' role='measure' type='quantitative' user:unnamed='시트 14'>
              <calculation class='tableau' formula='log(COUNT([gp_id]))' />
            </column>
            <column-instance column='[gp_id]' derivation='Count' name='[cnt:gp_id:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[game_count]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[general_game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[gp_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[game_count]' derivation='None' name='[none:game_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[general_game_type]' derivation='None' name='[none:general_game_type:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column-instance column='[Calculation_635570555647553536]' derivation='User' name='[usr:Calculation_635570555647553536:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:general_game_type:nk]' member='&quot;AOF&quot;' />
              <groupfilter function='member' level='[none:general_game_type:nk]' member='&quot;HOLDEM&quot;' />
              <groupfilter function='member' level='[none:general_game_type:nk]' member='&quot;OMAHA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[cnt:gp_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='700' />
                <format attr='maxwidth' value='700' />
                <format attr='minheight' value='359' />
                <format attr='maxheight' value='359' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk] * [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[usr:Calculation_635570555647553536:qk])</rows>
        <cols>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_count:qk]</cols>
      </table>
      <simple-id uuid='{34BA0720-6255-4B1D-87C6-B29FCC17E75B}' />
    </worksheet>
    <worksheet name='game_name'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column-instance column='[game_name]' derivation='CountD' name='[ctd:game_name:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[game_name]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[game_name]' derivation='Max' name='[max:game_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[game_name]' derivation='Min' name='[min:game_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='300' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[ctd:game_name:qk]' value='572' />
            <format attr='width' field='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[max:game_name:nk]' value='572' />
            <format attr='width' field='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[min:game_name:nk]' value='572' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[ctd:game_name:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[max:game_name:nk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[min:game_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{19E059A7-EF24-49AD-AB2E-6E3AA04C2558}' />
    </worksheet>
    <worksheet name='game_type, game_brand'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[game_brand]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[general_game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[game_brand]' derivation='None' name='[none:game_brand:nk]' pivot='key' type='nominal' />
            <column-instance column='[game_type]' derivation='None' name='[none:game_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[general_game_type]' derivation='None' name='[none:general_game_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[turnover]' derivation='Sum' name='[sum:turnover:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[turnover]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;TOURNAMENT&quot;</bucket>
              <bucket>&quot;HOLDEM&quot;</bucket>
              <bucket>&quot;SPIN_AND_GOLD&quot;</bucket>
              <bucket>&quot;OMAHA&quot;</bucket>
              <bucket>&quot;OMAHA_FIVE&quot;</bucket>
              <bucket>&quot;AOF&quot;</bucket>
              <bucket>&quot;RUSH_AND_CASH&quot;</bucket>
              <bucket>&quot;AOF_OMAHA&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_BACCARAT&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_BLACKJACK&quot;</bucket>
              <bucket>&quot;SHORT_DECK&quot;</bucket>
              <bucket>&quot;RUSH_AND_CASH_OMAHA&quot;</bucket>
              <bucket>&quot;AII&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_SICBO&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_ROULETTE&quot;</bucket>
              <bucket>&quot;FLIP_AND_GO&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_RUSSIANPOKER&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_CASINOPOKER&quot;</bucket>
              <bucket>&quot;FISHING&quot;</bucket>
              <bucket>&quot;SPIN_AND_GOLD_6MAX&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_DRAGON_TIGER&quot;</bucket>
              <bucket>&quot;FISHING_QUICKNIUNIU&quot;</bucket>
              <bucket>&quot;FISHING_PVPNIUNIU&quot;</bucket>
              <bucket>&quot;FISHING_COWBOY_HOLDEM&quot;</bucket>
              <bucket>&quot;SGI&quot;</bucket>
              <bucket>&quot;AOF_HOLDEM_SIT_AND_GO&quot;</bucket>
              <bucket>&quot;FISHING_4CHECK_NIUNIU&quot;</bucket>
              <bucket>&quot;BATTLE_ROYALE&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_JACKSORBETTER_MUHC&quot;</bucket>
              <bucket>&quot;BOF_HOLDEM&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_WHEEL_OF_FORTUNE&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_DEUCESWILD_MUCM&quot;</bucket>
              <bucket>&quot;FISHING_BLACKJACK&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_JACKSORBETTER_SIHC&quot;</bucket>
              <bucket>&quot;FISHING_DRAGON_TIGER&quot;</bucket>
              <bucket>&quot;SGI_6MAX&quot;</bucket>
              <bucket>&quot;BOF_AOF&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_JOKERPOKER_SIHC&quot;</bucket>
              <bucket>&quot;FISHING_GOLDENFLOWER&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_DOUBLEBONUS_MUCM&quot;</bucket>
              <bucket>&quot;BOF_TOURNAMENT&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_ACESNFACES_SISM&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_ACESNEIGHTS_SIHC&quot;</bucket>
              <bucket>&quot;FISHING_CATRACE&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_JOKERPOKER_MUHC&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_SEVENWILD_SIHC&quot;</bucket>
              <bucket>&quot;AOF_OMAHA_SIT_AND_GO&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_BONUSPOKER_SISM&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_BONUSPOKER_MUSM&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_ACESNEIGHTS_MUHC&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_DOUBLE2BONUS_SISM&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_DOUBLE2BONUS_MUSM&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_TENSORBETTER_SICM&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_SEVENWILD_MUHC&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_DOUBLEBONUS_SICM&quot;</bucket>
              <bucket>&quot;FISHING_LANDLORD&quot;</bucket>
              <bucket>&quot;FISHING_LADDER&quot;</bucket>
              <bucket>&quot;FISHING_BACCARAT&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_TENSORBETTER_MUCM&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_ACESNFACES_MUSM&quot;</bucket>
              <bucket>&quot;FTB&quot;</bucket>
              <bucket>&quot;TABLE_GAMES_DEUCESWILD_SICM&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_type:nk]' value='324' />
            <format attr='width' field='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]' value='220' />
            <format attr='width' field='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_brand:nk]' value='232' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:turnover:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk] / ([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_type:nk] / [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_brand:nk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{F91E78FE-8808-4291-8A5A-A7C1B99812CD}' />
    </worksheet>
    <worksheet name='gp_id, nickname'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column-instance column='[gp_id]' derivation='CountD' name='[ctd:gp_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nickname]' derivation='CountD' name='[ctd:nickname:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[gp_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[nickname]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[gp_id]' derivation='None' name='[none:gp_id:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[ctd:gp_id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[ctd:nickname:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true' total='true'>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:gp_id:nk]</rows>
        <cols>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8EB6ABB1-802D-4B55-BB4B-4439907EFE80}' />
    </worksheet>
    <worksheet name='is_feature'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='boolean' default-type='nominal' layered='true' name='[is_featured]' pivot='key' role='dimension' type='nominal' user-datatype='boolean' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[game_type]' derivation='None' name='[none:game_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_featured]' derivation='None' name='[none:is_featured:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:is_featured:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:is_featured:nk] / [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_type:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{37F325D1-13B6-4C2A-98CA-704829D30B22}' />
    </worksheet>
    <worksheet name='is_null_chk'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column-instance column='[user_session_finished_at]' derivation='Day' name='[dy:user_session_finished_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[user_session_finished_at]' derivation='Month' name='[mn:user_session_finished_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column-instance column='[user_session_finished_at]' derivation='Year' name='[yr:user_session_finished_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[yr:user_session_finished_at:ok] / [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[mn:user_session_finished_at:ok])</rows>
        <cols>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[dy:user_session_finished_at:ok]</cols>
      </table>
      <simple-id uuid='{266750F7-4150-433A-99F1-940974CA0C3D}' />
    </worksheet>
    <worksheet name='is_private'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='boolean' default-type='nominal' layered='true' name='[is_private]' pivot='key' role='dimension' type='nominal' user-datatype='boolean' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[game_type]' derivation='None' name='[none:game_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_private]' derivation='None' name='[none:is_private:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:is_private:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:is_private:nk] / [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_type:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{87603D54-0F35-47A5-9264-27A0E683AFE2}' />
    </worksheet>
    <worksheet name='is_staking'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='boolean' default-type='nominal' layered='true' name='[is_staking]' pivot='key' role='dimension' type='nominal' user-datatype='boolean' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[game_type]' derivation='None' name='[none:game_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_staking]' derivation='None' name='[none:is_staking:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:is_staking:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:is_staking:nk] / [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_type:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{0E1D8C00-7B6B-4495-AF31-49ADBEE62557}' />
    </worksheet>
    <worksheet name='jackpot_count'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[general_game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[gp_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[jackpot_count]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
            <column-instance column='[jackpot_count]' derivation='Max' name='[max:jackpot_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[general_game_type]' derivation='None' name='[none:general_game_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[gp_id]' derivation='None' name='[none:gp_id:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]'>
            <groupfilter function='member' level='[none:general_game_type:nk]' member='&quot;SHORT_DECK&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:gp_id:nk]' direction='DESC' using='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[max:jackpot_count:qk]' />
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[max:jackpot_count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[max:jackpot_count:qk]</rows>
        <cols>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:gp_id:nk]</cols>
      </table>
      <simple-id uuid='{41455488-A7F8-4356-9828-F60A58BFCBC4}' />
    </worksheet>
    <worksheet name='jackpot_count_sub'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[brand_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[country_id]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[game_count]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[general_game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[gp_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[jackpot_count]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[nickname]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[brand_id]' derivation='None' name='[none:brand_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_id]' derivation='None' name='[none:country_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[general_game_type]' derivation='None' name='[none:general_game_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[gp_id]' derivation='None' name='[none:gp_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[jackpot_count]' derivation='None' name='[none:jackpot_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nickname]' derivation='None' name='[none:nickname:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[requested_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column-instance column='[game_count]' derivation='Sum' name='[sum:game_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jackpot_count]' derivation='Sum' name='[sum:jackpot_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[requested_at]' derivation='Day-Trunc' name='[tdy:requested_at:ok]' pivot='key' type='ordinal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:gp_id:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gp_id:nk]' member='&quot;GHR0nSGfLxTRcniiHabvjJ1P&quot;' />
              <groupfilter function='member' level='[none:gp_id:nk]' member='&quot;nC58IRauX30IwmWc5lPxR3gC&quot;' />
              <groupfilter function='member' level='[none:gp_id:nk]' member='&quot;vZyJz3pKXj1IST6nCrGEb01G&quot;' />
              <groupfilter function='member' level='[none:gp_id:nk]' member='&quot;wL8jDFjG9hgmFUus0zqJR640&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:jackpot_count:qk]' included-values='in-range'>
            <min>1</min>
            <max>8</max>
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:gp_id:nk]</column>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:jackpot_count:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1127' />
            <format attr='height' field='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[tdy:requested_at:ok]' value='106' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[tdy:requested_at:ok]' value='248' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:nickname:nk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:jackpot_count:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:game_count:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:country_id:nk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:brand_id:nk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[tdy:requested_at:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{41010A8E-A9FB-455F-8257-2BEAEEF5D436}' />
    </worksheet>
    <worksheet name='ranking'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[general_game_type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column-instance column='[general_game_type]' derivation='None' name='[none:general_game_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[ranking]' derivation='None' name='[none:ranking:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[ranking]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk] / [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:ranking:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{733A632C-2B63-42B0-B5E9-73A6E7E14300}' />
    </worksheet>
    <worksheet name='user_session_id'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column-instance column='[user_session_id]' derivation='Count' name='[cnt:user_session_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user_session_id]' derivation='CountD' name='[ctd:user_session_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[user_session_id]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[cnt:user_session_id:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[ctd:user_session_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D56F2F60-3BBE-4B8F-B807-2D36DC3A2A01}' />
    </worksheet>
    <worksheet name='user_session_period'>
      <table>
        <view>
          <datasources>
            <datasource caption='game_poker_per_session_output' name='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy' />
            <datasource caption='매개 변수' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FROM' datatype='date' name='[매개 변수 1]' param-domain-type='range' role='measure' type='quantitative' value='#2021-07-01#'>
              <calculation class='tableau' formula='#2021-07-01#' />
            </column>
            <column caption='TO' datatype='date' name='[매개 변수 2]' param-domain-type='range' role='measure' type='quantitative' value='#2022-06-30#'>
              <calculation class='tableau' formula='#2022-06-30#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy'>
            <column caption='TF_date_filter' datatype='boolean' name='[Calculation_1019502423250317314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([user_session_finished_at]&gt;=[Parameters].[매개 변수 1]) AND ([user_session_finished_at]&lt;=[Parameters].[매개 변수 2])' />
            </column>
            <column caption='user_session_period_minute' datatype='real' name='[Calculation_242631487458177024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([user_session_finished_at]-[user_session_started_at])*24*60' />
            </column>
            <column-instance column='[Calculation_242631487458177024]' derivation='Avg' name='[avg:Calculation_242631487458177024:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user_session_finished_at]' derivation='Month' name='[mn:user_session_finished_at:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1019502423250317314]' derivation='None' name='[none:Calculation_1019502423250317314:nk]' pivot='key' type='nominal' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_finished_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column aggregation='Year' datatype='datetime' default-type='ordinal' layered='true' name='[user_session_started_at]' pivot='key' role='dimension' type='ordinal' user-datatype='datetime' visual-totals='Default' />
            <column-instance column='[user_session_finished_at]' derivation='Year' name='[yr:user_session_finished_at:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]'>
            <groupfilter function='member' level='[none:Calculation_1019502423250317314:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[avg:Calculation_242631487458177024:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[avg:Calculation_242631487458177024:qk]' />
              <text column='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[avg:Calculation_242631487458177024:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='14' />
                <format attr='font-weight' value='bold' />
                <format attr='font-family' value='Calibri' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[avg:Calculation_242631487458177024:qk]</rows>
        <cols>([sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[yr:user_session_finished_at:ok] / [sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[mn:user_session_finished_at:ok])</cols>
      </table>
      <simple-id uuid='{B50297D3-5BAF-4247-AE61-65088B6F61AA}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='is_null_chk'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[매개 변수 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[dy:user_session_finished_at:ok]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:user_session_finished_at:qk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[yr:user_session_finished_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{81F1836A-6175-47EA-9763-404DF048037D}' />
    </window>
    <window class='worksheet' name='gp_id, nickname'>
      <cards>
        <edge name='left'>
          <strip size='225'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[매개 변수 1]' size='27' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' size='27' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[md:user_session_finished_at:ok]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423265845254:qk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:gp_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:nickname:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[yr:Calculation_1019502423206883328:ok]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[yr:user_session_finished_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CE920E9-EED5-4E04-9105-5274278386E2}' />
    </window>
    <window class='worksheet' name='brand_id, site_id - turnover'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[매개 변수 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:brand_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:site_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{604907E1-8620-423F-AFD8-F525F2A88362}' />
    </window>
    <window class='worksheet' name='counrty_cnt'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[매개 변수 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:country_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:currency_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_type:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:user_session_finished_at:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76207C0B-1F4E-4EA8-9CBA-C1F8E4562E8C}' />
    </window>
    <window class='worksheet' name='currency_cnt'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[매개 변수 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:country_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:currency_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_type:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:user_session_finished_at:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BFB34E9-26E0-411D-AFA5-BE69B3842E15}' />
    </window>
    <window class='worksheet' name='game_name'>
      <cards>
        <edge name='left'>
          <strip size='234'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[매개 변수 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[max:game_name:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[min:game_name:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_name:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:request_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:requested_exchange_rate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F77E33B-D2B7-4B3A-AD9F-73AA78E09A77}' />
    </window>
    <window class='worksheet' name='game_type, game_brand'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[매개 변수 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_brand:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_type:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51EEB3EE-4E4F-4BE0-B6AE-90328735B1D9}' />
    </window>
    <window class='worksheet' name='is_private'>
      <cards>
        <edge name='left'>
          <strip size='241'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[매개 변수 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_brand:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_name:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_type:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:is_private:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FEAED54F-66C5-4106-BE1B-73A7853CDD62}' />
    </window>
    <window class='worksheet' name='is_feature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[매개 변수 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_type:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:is_featured:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5D1BCA9-B498-463E-94E8-0F98AB0AECEA}' />
    </window>
    <window class='worksheet' name='is_staking'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[매개 변수 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:game_type:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:is_featured:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:is_staking:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B62A46FC-CA1A-485E-81E8-4A16613C3D8B}' />
    </window>
    <window class='worksheet' name='user_session_id'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[매개 변수 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E594759E-A935-4A34-9497-7E0D7D918FC6}' />
    </window>
    <window class='worksheet' name='user_session_period'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[avg:Calculation_242631487458177024:qk]' type='color' />
            <card mode='datetime' param='[Parameters].[매개 변수 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[md:user_session_finished_at:ok]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[my:user_session_finished_at:ok]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[qr:user_session_finished_at:ok]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[yr:user_session_finished_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{140C0B44-53C1-4C82-B78F-5DD475432366}' />
    </window>
    <window class='worksheet' name='financial numbers'>
      <cards>
        <edge name='left'>
          <strip size='248'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[매개 변수 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[매개 변수 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='4' />
      </viewpoint>
      <simple-id uuid='{52666352-CB5D-444C-9B68-0F44C9E3DF1D}' />
    </window>
    <window class='worksheet' name='game_count'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9D0C7BB-A6D7-486B-B751-0C4AB54A6C78}' />
    </window>
    <window class='worksheet' name='jackpot_count'>
      <cards>
        <edge name='left'>
          <strip size='263'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:gp_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:jackpot_count:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EEF7B49-3C7B-44C0-A07B-37FB08F16169}' />
    </window>
    <window class='worksheet' name='jackpot_count_sub'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:brand_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:country_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:gp_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:jackpot_count:qk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:nickname:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[yr:requested_at:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1281E366-4D24-4B73-ACD7-0BD3E000CA75}' />
    </window>
    <window class='worksheet' name='blind'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:blind:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;200.00_400.00_800.00|A200.00&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:blind:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27CC486A-EF53-42A1-87D9-45EFC9CBF54E}' />
    </window>
    <window class='worksheet' name='buy_in_initial'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[:Measure Names]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:buy_in:qk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:buy_in_initial(구간차원):ok]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:buy_in_initial(구간차원):qk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:buy_in_initial:ok]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:gp_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:buy_in_initial:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DBACE290-76AF-41B8-A812-B1E68E69FB14}' />
    </window>
    <window class='worksheet' name='buy in cash/gcd/gtd'>
      <cards>
        <edge name='left'>
          <strip size='241'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:buy_in_initial(구간차원):ok]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:gp_id:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:buy_in_initial:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3FCB1C02-A8D1-4EC1-8984-DD09B35EBFF9}' />
    </window>
    <window class='worksheet' name='bet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9995FC30-AF39-4C72-8172-E258B7EC62DD}' />
    </window>
    <window class='worksheet' maximized='true' name='bet_count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:bet_count:qk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[sum:bet_count:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73C759BE-EA57-4177-B54A-B61FDC0145BE}' />
    </window>
    <window class='worksheet' name='ranking'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:Calculation_1019502423250317314:nk]</field>
            <field>[sqlproxy.0er5x7g1kwmwhc169hbxc1n1apuy].[none:general_game_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6A824D2-B431-4467-8AEA-6C02B385D901}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='bet' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQt0lEQVR4nO2dW48kR1bH/3mvrKqsyrpX9WXG9s56PWstyIt3EQgQEg+IxxWvCPFleOCD
      ABKvaLVCsE+LBEYI2WZZ8HoXz60vM13VXZfsrLwHD+1u3K72xnoysjI76vykuSi758SJ6fjX
      ORFxMkJhjDEQxI6ilu3AV0G6JLZBZQXgeV7ZLhA7QGUFQBDbgARA7DQkAGKn0YFqTjgZY5X0
      i5AL/fovVZt0BkEARVFy2YiiCKZp5rKRZRlUNV+gvBZy3v6I8IX6cxsduOqI4zi5HCmCvD6F
      YQjLsnLZSJIEuq7zv/FXkGUZAOT+YYvwRcb+aJr22mKUeg6QpmnZLhAVR2oBEAQPqQWgaVrZ
      LhAVR2oBUApE8JBaAATBI98U/DXxlxf45dMXaDQaUE0bLFiC6TWE3hLu6ACTQUdIO5QCETxK
      EYBp21AYg6Zp8DwPrWYdCJYwhodIAg9p2kKapkiSJFc7URTlFkGWZbn9uF43v14+LNMXGfuT
      h1IEEPg+zHoDds0EUw1YWgrW2UOwOENn9ACapkHTtNxrxCJsyLhuLlt/8uwDlCKAZruLt9vd
      zS/0xKQ+1+T9ARHyI/UIyRseCfmRWgAEwUNqAVAKRPCQeoRQCkTwkFoAect1CfkhARA7jdQC
      oBSI4FHKPkDor3B8Nsew42AVZrCUGDCbCJbncIcT2KYYtygCEDxKEYCiavAW50jSDIYKhCrA
      Ls6gNIZ4dXqKg/2JkFIIKh0oxkbV+pOHciJAsEaSpsjiEB5TUEMEplsIpqfoDPeElUJEUUSl
      AwXYqFp/7l0phOP28N57vcLboRSI4CH1JJgEQPCQWgC0CkTwkFoAFAEIHiQAYqeRWgCUAhE8
      pBYARQCCBwmA2GlK2QdgWYpLP4Bl6gjiFJauAqqONI5g1mxoqpiBSykQwaOkl+Iv8fzZM6RM
      RbvbR7g6B2MZEqah3mzhwf4YjDEhAzivDRF+iCodEOWLCBsijq4X6cvr+lNKChSHPoyGi77r
      4OXpKRRVg6oAmm4AOTtURWTsjyyUEgGsugMn9eE063i73YOpZoBmIQ592A0Hqqre/MpL2efP
      V80XGfujKMr9qgWy7AZGdmPjec1qC22HJsEED1oFInaawgWQxGv844/+Af/8k39BXHRjX4JW
      gQgehQtA1Qwo8SVS1dx6uKEIQPAoXgCqjvFkgOn0ouimNiABEDwKFwBjGfwoQ9NSse3FM0qB
      CB6FrwItz8+QKDq6wy6lQETlKFwA0TpCuzvAwd4ENByJqlG4ANq9Dj7+6cc4Pp3hj/7wd6AA
      8FdzPD16ibbTgB8z1JQYzLARLC/QGT9A320KaVumHUuiGL4kAIYgCGGZOtIMUDQdWs6PbdNu
      ol6vY+6tkOJq0mHVbDQbDcQpUNMAppiAfw67d4D1ao7UsYUci8IYo2NECrBRtf7k4ZYAWJbi
      44/+E+89PsDxHGiNJ+iYuewDAN79znew8JObxhazKVbrAJ2GBT9WUFMisEYPwfkxOqNDYcei
      xHFMx4gUYKNq/RF2LMr81QswJcPJzAM0MWlIHHr44d//CP3JQ0z2x9ABdMf76I7v+ObJXQ9f
      H0qBCB63BOD0D/D90UOkSQwoGlQBlywaVhOP33mERG9ufRJM9wMQPG4J4Doc6YaAvOcLGKaO
      pIQleYoABI+tfES6nS4uPW8bTd2CBEDw2E6OkGUoYyxSCkTw2Mr7ACenpwiDeOulEBQBCB6F
      f0T6qwX64z2YdXvrpRAkAIJH4RFgdvwM54kJFkXIsN03cCgFIngULoCDt99FfTbD228+vGks
      DnxceAFMxJgHGZp6BmY2ESxncEcHcGwxq1AUAQgeCithlKRpgtOXZ4j8JTS7DSWLwIIl4OwB
      sY/9vQlWqxWazXybcev1GrZt57Ih4sXt6//ivNWpVXkpXqb+lHRHmIfj4xMc7A0xnS9QNzIo
      egPr6RE6w31hpRCGYVDpQAE2qtafe3dDTN1x8b33vwsAmOwV1w6lQAQPqWeJJACCh9QCoFUg
      gofUI4QiAMGDBEDsNFILgFIggofUI4QiAMGDBEDsNFILgFIggkc5N8RcrvD81TksxFgEGWpK
      DGgm1r6PznAPh5OBkHYoAhA8ShFAreGgWfMQR4BjMyiKBRatYPbHyOIQaZoKORYlSRI6RqQA
      G1XrTx5KEYC/mmOx9DAe9RAmCiwlBswBguU53PGYaoEK9EXG/tzLWqB3vuVufsGpC22HDscl
      eNAskdhppBYArQIRPKQeIZQCETykFgBB8JBaAJom4GxHQmqkFkCapmW7QFQcqQVAEDxK2Qe4
      5uT5U4SKCSXywHQboTeHOzrEqCfmxnhKgQgepQpAURUEl2s06jYQLNAYHCLyV0jdppBSiDiO
      c4tAxtIB2fqTh1IFYBg6DEuFjhRojRDMT+GOHwgrhVBVlUoHCrBRtf7cu1KIa3rDPfS++GDY
      F2qfUiCCh9STYFoFInhILQCC4CG1ACgFInhILQBKgQgeUguAIHhUSAAMT37xCeZeIMwipUAE
      j8oIgIVL6O0xVhdTYTYpBSJ4VEYAitHA6tVzGLaYG+oJ4tdBYVfAK+Ee31+F7/uo1/O9IxyG
      ISzLymUjTVMh5RRA/p1TEb6IsMEYA2NMiv7owNVVN47j5HKkCPL6ZJpmbgHIWDogW3/ylEJU
      JgUqApoDEDykFgBB8JBaALQMSvCQWgCUAhE8pBYAQfAo5X0AxtjVBceKgowBioKr31gGRVFz
      X8B8DaVABI9SBLD2FvjZ/3yKuuOg0WwjXM0AVUcQRnB7IxzuDW/WmvOQpqmQI9JFHbNeFV9E
      2aiKL3nslCIAVdVg1yzYloWzszP0Og4Q+dDdHrI0QZZlN1EiD1mWCbGRNyKJWjcX5UteG6IG
      fxX6U4oAFAVo9YboOjU0213YWgpm7CH05mh1B9A0Faqq5k5hDMMQsuuZ18b1DyivAET4IsKG
      KEGL6o+qvn7aXIoArLqDw/rVLm/jC8+d+khoO7QKRPCgVSBip5FaALQKRPCQWgCUAhE8pBYA
      QfCQWgB0QwzBQ+oRQjfEEDykFgBB8CjnnuDlBZ6dTNFpN+FHVzfFM7OBYDGDO36AbkvMdamU
      AhE8StoIqyMOfHhWDZYGJIoOrF7B7BzgcnGOdsMSdjy6iNf/ZDtOXLb+5KGcCOB50EwThpLB
      j4GaEgM1F/70BTqjQ2HHo+u6Tu/QFmCjav25d8ejO24P33Z7d3xlX2g7osqqCXmROkmmVSCC
      h9QCoAhA8CABEDuN1AKgFIjgIbUAKAIQPEgAxE4jtQAoBSJ4lLIPEIc+XpxM0WnZmPsJ2jUV
      zGggXJ2jPZigbhlC2qEIQPAo6Z5gFbqS4uj0DG53gJXvg4VnQGOIs5cvcbA/EVIKQaUDxdio
      Wn/yUIoA5tMTTFchJr02Ts/O0DAZFK2G9fQUneGesFKIKIqodKAAG1Xrz70rhRjsv4nB51UP
      44nY8ocvQikQwUPqSTAJgOCxlQhw/XK6qmnY5pCkVSCCR+ERIA49/N1f/y1+/OOfYNtnNFAE
      IHgULgDDauJw5ELRLIg5BvXXhwRA8NjKHGAw6mHuX259xk0pEMGjcAGEvof/fTGFlcXIt+L7
      9aEIQPAo/EOZMYZ3f+M3oRnW1iMACYDgUXgEOD89xsf/9d9YLlZbnwNQCkTwKPxDefLmN7E/
      fYWTsxm+9c4jAIC/muOXT57BrjcQJuzqpXjdQnDpwR3uY3901/vCXx+KAASPWwJgWYInT55i
      ODnA7PQI7cEQcRijVjPQbDTBGMPxi6eotwdAtIbT6eDiYo6aDiQZ8HJ2gVGvg9U6xoP9MQBA
      UVWkmYJ07SPDVcjRNA3d/hhpHMDUAagmWLCEM9hHGq2RpinVAhXki4z9ycMtAZwdH6PWaGD6
      4jOwpgvf93D87CXa3RYevdVEsr5AEOtQfB/To0/hBt/AdHqKRg1QYx2hYWF+cQHVat7YZFmK
      /YdvYsK0m3wrDAJ43grDbhvrBLAQgTkPECxn6Az3hdUCiTgXSMbaGdn6I6wWqNvv4uefPUe/
      38fsbAqr38ejR2/g5PQYn37yCWynhTRaITEyuIOH0JQEDyY9XMYKLJYh8kPY9TqWfnBjM00j
      /McHH8DqTDD5PCq0ugO0ugMAQOeLDrit1+oEQbwutwSg15r49uPHAIDhYHDzvO22//+b9iYb
      Rvqf/zn+0p8AoBs22u0maq3m1ifBom4gJORlKxthb771Vu5Q9zrQJJjgsbVq0GeffQZalCSq
      xlYEcLmaw3BaW98IoxSI4LEVAawuQ+hJvPVqUDoeneBR+Ag5+sUn+OZ7v42DybDopjagCEDw
      KFwAbt/Fh//2r1iECbZ9aSkJgOBReFrecEf4g9+/fQN8cLnC0dkFDBYhMxpILy/AdBPBpY/O
      cB/7YzGlEJQCETxKeSm+1nBQX3pQMuDl+RyddhMsXMIYTISWQlSlnKJqpQOy9ScP5dwQs5pj
      vlii33XRG9ioaynQfgPBcgZ3RMeiFOmLjP25d8ei1B0Xj99xN7/Qbm4+ywGlQAQPqUcITYIJ
      HiQAYqeRWgCUAhE8pB4hFAEIHiQAYqeRWgCUAhE8pB4hFAEIHqXsA0SBjwsvgK1lWAYZLCUG
      zAaCxQzu6ABO3RLSDgmA4FGKAHTDQhovsFgnYIxhrQBYvQBae7iYnaFuibkhBgCVDhRgo2r9
      yUMpAgj8FY6OTtDvthEkCiwlAvQmgrMjOhWiYF9k7M+9LIX43vvfLbwdSoEIHlJPgmkViOAh
      9QihCEDwIAEQO43UAqAUiOAh9QihCEDwIAEQO43UAqAUiOBRyj7ANb63wOIyRsvWwQwbkb+E
      4/ZgaGIGLt0QQ/AoVQBHL16g2R3j1WwGFgdgZguryxMcHkyQZdnNBduvS1VsXKdieVOyKvXn
      +lfZvmRZlusQ5FIF0HFdPDk6QsvWAFVD6C3R7vShKAoURcmdwui6ntsGYyy3DVGlAyJ8EWWj
      Sr7ksVGqALqDEdr9MVSFAYoKlqZQdf1GAHmPN8/76XBNXhvX/74KvoiwwRgT8vMR4UteO6UK
      QNX027NwmrQSW0bqEadp2z6NlLhvlBoBiuauCVaapgjDcOO5pmmwLDEv4hD3B6kFcBf+eo2/
      +Ksfbjz/we9+A3/2J++X4BFRJlIL4KtSoCTdXL7LaNN4J5F6DpB3jZmQn+oIIA3w8Ucf4dnx
      q7I9IXaIyqRALE3Q6o3AkkiYza+zCrTw1vj3nz3deD5063iwN7jjXxAyUBkBKGYDtraAO9q8
      iPt1+Top0C+P5/inD482nv/xbx3g+48vN56/MW6jXttcNarValSEd49Q2BXwPK9sX27h+z7q
      9XouG2EYbixtJkmCnz6ZbnyvbWpYR5uCqekKgmRzhtywNATR7WI7TVPwcNC40xfbtnMLI03T
      3HsbImyIKoWoQn8UVtGi+dVqBcdxctkQISIZjxGRrT95jkWROlbTTjDBQ2oB0DIowaMyk+Bt
      EUURPvz55mR31G3iIa327BxSC+CuFCiMIvzl33yw8fxPf+8R/pwEsHNQCkTsNOXcE7y8wPPT
      GdxWHetEQU2JwYwGguUUnfEDuE27DLeIHaQUAVj1OqL1MyxVBs2wkWgq2PIURvsAq4sZHFvM
      8eiKomzYyNK7X5RnjN3ZnozHicvWnzyUEwE8D6phoF6zsfRDqFoKmC0EZ8/RGR4WelO8+hUn
      TiiKcmd7Mq6by9afPPsA/wfwR4YdphM/YQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='bet_count' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='blind' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='brand_id, site_id - turnover' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eXAd93Xv+enuu19cLBf7TmwkCBAguIEkwAXcJIqUqY2RlOTFE43Hduql
      nEyV48okr1JynDdOXipj51XleeI38vIiR6JEarFMWSIJcQFJcMdKEiQIYgexXCx337t7/gDR
      IiQ5EqmFEtGfKlaBv9v9u7/u26f79Pmd8/0Jqqqq6OgsQARBEMT7PQgdnfuJbgA6CxrdAHQW
      NLoB6CxodANYoExPTxOPx+/3MO47ugEsUPx+P4qi3O9h3Hd0A9BZ0OgGoLOg0Q1AZ0GjG4DO
      gkY3AJ0FjW4AOgsa3QB0FjS6AegsaHQD0FnQ6Aags6DRDUBnQWP4qEZZlvU8kQccRVGIx+MI
      gnC/h3Jf+UgDcLvd+P3+L3osOl8ggUCA8fFxRHFhOwGCXhO8MBkcHCQrKwuTyXS/h3Lf0GuC
      dRY8H+kCfRQx3xjH336N4+3D2LMr+b0/2EtZqonJ/osc2Pc2A36JJRt3sXdLJX0nDvDKoQ6i
      Rgsla3fz9cfWYpZDtDS+wtunujEXrePrv7eTVHWcQ68f4MyNGXJrdvDc3o3YBDcv/t33Ga/4
      A/5iby2CAC1v/nf+V3sy/+Wv/4gMo/R5no9PhCLHkVURg0FEUFVkRUEUxY/0pxU5DqIBQZVR
      EJHEB8PnVlUVWZa1ohqj0Ygoilq7IAgYDAZUVUVRFGKxGKIoYjQa552naDSKoigYjUYkSdK2
      netTEARUVSUWi6GqqrbdneO48zNBED5yXHP9CoKAyWTSxvAJDSDAoV/8Cz1ZX+O//OBbRMc6
      GAgoBMNn+R//33ts+9//T75RYOJqVx9yLMLM8BSVj/8pz9Taef2//zf2Xyhinf8NXr+Synf+
      r+8jBacxqyHe+dW/0p/9BH/3/WJO/K8f8z/eTOfPHnfinbpFV8tNPE/Vkiz46O8YwB0wEFYU
      4P4bwOCJ/Rz257L34Q041UkOnuhh59a1mD/CONuPvEHyxt/DdOsM/cEy6pdn3ocRf/bEYjEO
      HjxIe3s7AKtXr2bHjh20tbXR2tpKZmYmTz75JLFYjEOHDnH27FlMJhPf/OY3ycnJ0fr58Y9/
      jMfjoba2ll27dnHmzBmampoQBIF169ZRV1fHhQsXOHXqFOFwmKqqKp588kkMhtlLt7e3l5df
      fplIJEJdXR0NDQ2cOHGCc+fOIcsyixcv5rHHHuPQoUN0dnZisVh47LHHWLp0KfBJDcB3g5ab
      CTz59TVYJBVzTg1VosLVX59GWraT9SXJoCgsq6pAFMLaboIpjdJSJ0dn+rh4qpt1/+mHZDnM
      CI5sosFh+l3Q8MQyDGYrGx/fzvH/5wyTu3YjJOVQax6lY0plo9DJkK2GbNX3Wf12nwGZ5GeG
      6BuYIqXg/da51ylBAFW9/ccDiiRJbN68mT179hAKhXjjjTcIBoNkZmayc+dOurq6ABgdHcXn
      8/E3f/M3XL9+nfPnz7Nnzx5EUSQSibB3715ycnLYv38/IyMj3Lp1iz/90z/FYDBw+PBhAoEA
      BQUF/Pmf/zmSJPHaa68RiUQwGAwoikJLSwt79+4lKyuLt99+G4/Hw9q1a9myZQuxWIx9+/Yx
      ODiI2Wzmb/7mb/B4PBw5coTi4mLgk84DhANEpVQSHSJnX/17/vMfPcFPjg0TDIRwpqYiuS7z
      4//7r9n7nb/j5kQAiNLb1syRdw7Q2AkbKtPxB6ykOi3MXRKqGkRRLNgs5tmBOBKRfLcIBAGs
      rK7P5eKZXvrOX6Zww3LMn+3v96kpWbwE10APQfl2DCEyycEjZwhHZWCYdw9cIHhfR/j5IkkS
      VquV48eP8+abb1JcXExSUhJFRUUkJSUBszeEYDBIYWEhZrOZJUuWEAqFNPckHA5TWFiI1Wql
      tLQUr9eLoig0NjZy5swZBgcHCQaDFBUVIUkS7e3t5OTkYLVaAYjH46iqyqJFi3A4HGRmZhIM
      BjGbzVy8eJHXX3+d/Px8MjIyuHXrFo2NjVy4cIHJyUktyvnJDCAxDUd8kHFXjLpnv8f/sXsV
      VsmIMy2F4cEBYhlV/Nl3vkNdmeP9fVQVwZTGjj/8Bqvy00hL8zMw5GYu5CSKTiSDj2nv7J1d
      Hh8lnFpK8u0uLGU12LuOc2womVUFX75IhTEph2VJXtqGH+TL/OMRBIHk5GTC4TCyLH+qvkRR
      5JFHHiErKwtJkjCZTIiiSDQa5ejRowiCQF1d3ScK3QqCQFJSEpFIhJSUFHbt2oXBYMBisSAI
      gtbHJzMA82J27sji17/4n7zz3gk6h0PYrCZKNn6Nkomj/L//9hbHm8/jjZkxSiJgonhFPTu2
      b2F5aSYSiWx75nF63vqfvPHOEd460oTLb2RL7RLePbCfo4ff5F9+fpqNv/8I6XNOmXkJBcYz
      tCnpZBu/jMEqA7mrVxNrO8NocPaHFxQZWVEIe7wElQc7uhyJRAiFQjQ0NLBt2zbGx8eZnJyc
      t40gCNhsNgYGBohEIly/fh2r1ar57xaLhYGBAUKhED09PaSkpGCz2aivr2fJkiXY7XZsNhvH
      jx+noqKC2tpaLBaL1r/BYEAQBPr7+/H5fIyPj2O1WgkEAqxZs4adO3cyNTXFxMQE6enpbN26
      lYyMDJKTk3E4Zu+0n/AlWGDZw/8btrw2ekZ9FKx7kqqlyQi2DH7/P3+L1pYreKNWHt21kszk
      RCybHibfkTZv/8TijXzzPyVx5eY4hqRcEhwJZG19GlNGO30TQep+79usqUhCUE1sf+ppMh0C
      6V/7UzLJQXJYefLx7aQa7v8L8J0IYipFZXZOnplENaygwDLD/pdfxu6UCMWL7/fwPlfC4TBv
      v/02PT09SJLEsmXLcDgc/PSnP6Wvrw+Xy0VHRwd/8id/gsPh4L/+1/+K1WrlueeeIxKJcOzY
      MbZs2cKBAwfw+XzU1taSmZnJxYsXOXToEJIksWPHDgDOnTvHsWPHMBqNpKen84d/+IdcvHiR
      lStXsnLlSl5++WWi0SgbNmwgMTGRX//613R3dwNQUFCAw+Hgt7/9LW1tbZhMJp577jmMRiOg
      T4TdE4osgygiCgKqIhOTVYwGCVWRicsKgiggICIZJNTbYVBUGfVLFAb9tBNhqqoSj8e1dIq5
      cONcWBNmnwBms/lDYdDOzk7cbjcbNmwgHo/PC4N+sE9BEOb1KYoik5OTnD9/nq997WtIkkQs
      FkNRFC28GY/HNXfMYDDM61eSJK1fQRAE3QAWKPdrJlhVVUZHR3E6nfPcmbthZmYGgJSUlE81
      FkEQhE88Eaaj81kgCMK8eYB74dNe+HeiG8DHIMvyp45ufBm5c8Z1IaMbwMcw5+s+aOjp0LN8
      GeOLOjpfGLoB6CxodBfonlCY6Ouk8/owMbOTyurl5DltEPdz5dIFBieDJOaUsaKqDDE4Ssu5
      FmaiApbUQtatWorRN8ipS12EogrmpExqVq4k1RjlWuspel0RAJKLV7Kh4tO9LH4ZUBSFCxcu
      0NbWBkBtbS0rVqzQPtu3b582cVVdXY3P56OpqQmXy0VNTQ3Lly9HlmVOnDhBf38/NTU1rFmz
      Rut/amqKt956i2g0SkZGBtu2bWNkZITz58+jqirr169nyZIlRKNRDh8+zNjYGOvWraOiogLQ
      DeAeUPD3X+TUdZmV1Wswx/0EwkGUWJz2U6cJpi9mVXECIb8XfyCGORrGmJTH6qIs3H1tNF9x
      UueYwZS3lOp0O77xfro6e1hdnU1YtVC5qoYEAxisiff7QD8TotEoN27cYMeOHRiNRi1PCGYD
      DLW1tYiiSFNTE6mpqfT39+N0Olm8eDHnz58nNzeXjo4OIpEIO3bsmJcKDTA2NkZqaiorVqzA
      bDZjNpuJxWKsXbtWM5z8/HyOHj2K0Whk+/bt80K/ugHcLWqIru4wG7ZtIMMoAhkABMcHCCbn
      UVtRjEkSIGM27dntErE5UkjPyCIrcQl9Z33gELEnOUlPTUD1jWOKGxAQMFrsONPSSTLex+P7
      jIlEIlitVhYtWvShHB6j0UhJSQkulwu73Y7JZKK+vh5RFAkEAvT09BCJRPB6vWzduvUjw59+
      v5/i4mLy8/O1turqahRFoa+vj4SEBPx+P263m2eeeUabAZ5DN4C7JRbEJVhZIQlMXmvi4Ole
      Mqo3sCZdxmQwI0bdnDl5lOuTCmu3PEq2pBD0epgYN+Hp78acWgNMc+nQAdoxkVpYysoVJRiI
      Mt59njOX2jGKkF7ZwKO1Rff7aD81siwzMDDA888/T1JSEs8++yy5ubla9OmnP/0pHo+H7du3
      43Q6gdnVa06fPk1ZWRk2m43JyUn+9V//Vcv537p1q5ZP5PV6ee2110hISKC+vp4NGzbg9/t5
      6aWXUBSFLVu2IMsyXq+Xf/qnfyISibB9+3bWrl0L6KkQH0s8Hicajb7foPg4c+gSJds3kWEU
      ibiG6ZyMUJYs0j7iY93KKkyiwHjfRWakCrJMg5w41oKUlEJiRjGrlpeiDnTSbS1iZY4D92gv
      10YiVC4toL/nBgWVK7+QJ8Cc6/DBO+LnhaIoDA4OcvLkSZ555hnNDVFVFZ/Px3vvvcfy5cux
      2+1cvHiR2tpa0tPT8Xg8HD16lIaGBqxWKwcOHGDLli3k5ubO69/v9/P222+zdu1aFi1ahKqq
      TExM0NjYyPr167l48SKPPfYYqqpy4MABtm7dSllZmT4TfNeIdioXWzh6opXVVYUwM0UkZsfm
      dGK7fI22G8kUp9qYnPYhZgKShZLl9SytKNRq2fwoBH1upqbjBP1+wpHb8w2RIO7pKeIGMFgS
      SLJ/2aog7p7R0VG6u7spKSlhZGSEhIQEBEHA4/GgKAoejweDwUAoFCISiXDjxg3S0tKIxWKM
      jY2RmJiI3W7n2rVrZGZmoqoqVqsVr9eL2Wzm7NmzZGdnawU2oihy7tw5MjIykGUZn89HQkIC
      ZrOZy5cv43Q6EUVRqynQnwAfw4eeAAAojHSdp+PmBKo5hfLqGooyHBBzc+nMOUbdURJziqmp
      Woop7sETgIzMFC3mHJnspenCFYJRBbMjg+rVq8i0yHRdauLmxGxFXUrJajYty+Xz4ot6AsRi
      MVpbW2lpacHpdPLoo4/i9Xo5fPgwTzzxBK+99hrhcJhVq1axcuVKGhsb6enpAcBkMvH4449j
      t9s5cuQIExMTbNq0iby8PPbt28cTTzyhRXei0SgbN26kuLiYlpYWOjs7AVi7di1VVVUEAgGt
      YmzHjh0UFhaSkJCgJ8N9HB9tAF99vmgXaA5VVWltbSUjI2Peu8Dd0N/fj8fjobq6+lPNZNvt
      dt0APg7dAB5c7Ha7rgu0kFnoeUCgh0E/FoPBoIXcHiTm6mMXsjIc6LlAOgsc3QB0FjQP3rP9
      C2FW7k9RVEBAlEQEhNvtMqoKgiAiirfbZGVWDkYQkEQRUJHl2/LzWhuoisysmMRsn+KX3Ee/
      UwZRkiRNBnGufleSJE3a8M4a3bl3jw/WWsxtL8syqqoiiqKWPjG3/9w2d47hzu/74NjmJCvv
      /J658YJuAPeEEhjn+NEmBl0+VGMiy9ZvZlVxCpO9lzl5oRN3IEZCVgmbNm3A4uvi4BvvEbYk
      gMHBuu2PsCjYzovHr2ISRURzAstqd1CTZ+DYr1/kpt+KxWgmr6qebauLvwRCkB+Noih0dHRw
      4sQJ8vLyeOqpp5BlmZdffllTZKirq2PDhg0cOXKE1tZWFEXhscceY82aNQiCwPT0NP/yL/9C
      NBplZmaGb3/728iyzJEjR/B6vSxatIhnnnmG7u5uDh48SDweZ8+ePdTW1mrj6O3t5fjx4wQC
      Af7sz/5Ma/d4PPzwhz+kvr6eNWvWsG/fPqamprTC+O9973uzG6o6d0lU7TvxW/X49VE1HFfU
      eDiguv1BNeoZUY8calQHp4KqrChqyO9RA6G4Oj3Wq7Z39KoxRVb9IxfVN45eV73XL6jnh2ZU
      VVVU71i/evrUJdXn96htF8+pMxFFjQXG1aOvHVbHP8ejGBgYUCORyD3vL8uy2tvbq3Z2dqpH
      jx7V2lwulxqLxdSRkRH1Zz/7merz+dQbN26o0WhUdblc6r59+9RYLDavr2AwqL766quqz+dT
      +/v7VZfLpYZCIfX1119Xb9y4ob700kvq8PCwOjw8rP785z+fN+6RkRH15s2b6oEDB+aN7dCh
      Q+oLL7ygNjY2zvuu3t5e9dChQ2o8HldBfwLcPXEPXYEUtpVmEp8a4Oqwh6TsQuRIkITMbLId
      MHLzKlNhiYKiUuY5McKsawRxbvVcoWXcQsA7ib1w7YekH0VJ4svsAImiSFFREcPDw5ogliiK
      SJJEc3MzN2/epLKyErvdTklJCW63m9bWVpYuXTrPVVEUhfPnz7N48WLsdjt2ux1FUbh8+TIW
      iwWLxUJSUhKpqamYzWZsNhuBQECLXuXk5BAMBue5VT09PcRiMWpqavB4PNp3hUIhzp49y+7d
      u3UX6J5RVeTbc4eqIhOaGmM8ZmJlusisK6oiy3Emb/UgJORTYPTT3nSU8+cdmKzJrNryEPhc
      yPE4sZiMwepAiASQsTPWfY7mlk5sFjuFy+tJva8Hem+ot/16h8NBJBJBEAS8Xi+NjY1UVFSw
      dOnSeT68z+fD5XKxatUqBEEgFotx5swZVFWlvr7+Iwv31f9g7jYajdLd3c3KlSsZGxubt8/Q
      0BApKSkkJr5fa6EbwN1iSGKJZZqLA9OsKSimplKgbTKGI9mO/0Y3k6ESChdXI+HDA2CwU1W/
      i/LKRRgEEUkS8fuM5JcvZU1uEqHpW7Rdv0UodwmZZWuoysumu+Mm+dkpX7kQ3ZxO/+bNm/F4
      PLz66qtUVlZy/PhxHnnkEex2+4cm33p7e8nJycFmswHQ0dGB2Wxm9erVSJKEz+fD4/EwPT2N
      IAgEg0ESEhJ+5xi8Xi/nz5/nxIkTWsJdZmYm5eXl3Lhxg2XLls3bXjeAu0UwUVy7gpuHDvFS
      Uwwwkr+iHlNSBtX5I5z4zSuEY2BwJLNukwEUAVEyzCqfaZ2EaTn8GlclA4Jkpmh5PRZx1j2y
      OQuoXSVx9eoFutX1lGVYvpSuUDQa5cCBA7S1teHz+Whvb2f37t0cOXIEl8uFIAhUVFTgcrk4
      e/Ysly9fBqCyspKHHnqI06dP09DQwI0bN2hoaNCiPSdPnuTWrVu8++67mM1m/uiP/oiSkhJ+
      9rOfoSgKu3btQpIkGhsbqamp4cKFCzQ3NzMyMsL169fZu3cvP/jBDwBoaWnB7XZTWVnJxMQE
      oVCI7Ozseceh5wLdEypyLEYsLoMgYjAab4cyFWLRKLKi3r7oDQiqiqJyO1R6e285TiQW08Kl
      RpMJUZj1h0VRQhBU5HgcVTQgicLnYgCfhTRiJBLRwouiKGrliHOh0TmpwkgkooUqDQYD3d3d
      TE9Ps2nTJuLx+LxVY8LhsNanIAiamnM4PJsla7FYGB8f58yZM+zZswdZljU3aU6KcW7mfi6c
      OreWgCzL88KwujTiAuZ+SiPeunWL1NRUXRpRZ+EhCMKHqrnuFl0a8QtEl0Z8sNEN4GNQVV0a
      8UHmqxZp09H5TNENQGdBo7tA94SCq/8yl7tHiJlSqKiuJjfFBvEAV1suMjQVJDGnlOXLShGD
      Y7Sda2UmJmBxFlC7spwEk4RvvIfWjh6iZifLVqwg0w7jvVe4fHMMg7OAlVWLSbQYmOg+z2A8
      l+qluZgEkCMTnDnbx+KaGjKS7q9qxNTUFEeOHCESibBx40YWLVrE0NAQzc3NGAwGNm3aRHp6
      OhcvXqSjowNVVVmzZg01NTVaHy0tLbS3t5Ofn8/GjRuRZZmmpiZmZmbYuHEjubm5xGIxTp48
      ycDAAMuXL2fVqlXzxiHLMs3NzSQmJlJVVcX4+DhNTU0YDAY2b94MwNGjR7W0iKysLLZu3Qro
      BnAPqAQGLnGyK0ZN1QrM8QChUBAlQabj1Cn8qWUsX2knFPDh90cxR0OIjmxqFmXi7mvnzNUU
      tiwKc+pCP0XVy7EJEeRQCK/vJpe6g1RUVxEZu86pSxIP1y/BMzjBsCVMQTCLDLuIv6+T9tEI
      mSWR+2oAkUiEs2fPUl5ejtFo5MyZMyQmJnLixAmqqqoIh8M0Njby1FNP0d3dTUNDA0ajkeTk
      5PfPpKpy5coV6urqtLmA1tZWIpEIxcXFnDhxgj179nDu3DlCoRCbN2/+UHWeqqr09vZy+fJl
      srKyKCsr4/Tp05SWliLLMsePH+fRRx+lvr6eeDyOz+ejra1NzwW6Z9QgXddDbNg+J404S2hi
      gEByHmuXlcxKIzI74+h2idgTnWRm5ZCTHGHgrJvRXg+5K1dTnjN3MSj0nByjpP4hipIkyEnG
      f+gsE/EliEYbyQ4rbreXDKuRG/0qS4oT77vvajKZ2LVrF4Ig4PP56O3t1Sad8vPziUajjI+P
      a9KIxcXFH5JGjEajPPzww2RkZGhto6OjNDQ0kJiYiMvlYmJiAo/H8zulEcPhMF1dXaxevZrR
      0VEtulVUVITdbqe3t5doNEpubi6KotDU1MSaNWu0OQjdAO6WWJAJwUrNHdKImcs3sjrtA9KI
      UwrrGh4lS1II+X1Muix4+roxOctx+7wkWe489RG8HjPZibeTJUQbiZYAvjBIgkRump3xGR9F
      5ije1DzSDZMfObQvEkEQUBSFoaEhLl26xLp163A6nZSWlvLCCy8gSRIPPfQQsizT39/P888/
      T3JyMs8++yw5OTna4ncHDhxgbGyMiooKHnnkEU20SpIkDAYDfr9/njRifX09W7ZswWAwoKoq
      3d3dZGZmkpGRwejoKGazmby8PH7yk59oM8gNDQ04HA6mp6e1xfnm0A3gbjFYSIkHmZFV0ss3
      8fupxXRORjCZjESiPhRzMusfeorivovMxFQQooz0XGZ0YpjEjBLWlWczdfkW3sidoVUTjsQo
      Xp9CdqIIShBfxEa2GUII2DKzEK/30Gu0kp2RSnz6/hsAwMDAgJbLk5KSgt/vp6+vj29/+9uE
      QiHee+89Kisr+e53v6tJIx49elSTRjQYDDzzzDMkJydz7Ngxurq6UBSFUCiE0WhElmXsdjsZ
      GRk8/fTTWK1W9u/fz8TEBDk5Objdbg4ePEhubi4tLS2Mjo5SUVHBxo0b2bhxI6FQiP3792vZ
      nz09PRQWFs5zo3QDuFtEOxVlJo41tVFbvQimp4nEbNhSU7Bc6aK9J4WSNDtTMz6EDECyUFqz
      4Q5pRBXTonQuN7diW12NjRCqlER6URqnmy9gX1lMZPQKo7ZclhthAMCQTEmymxODcepXlTI9
      fR+P/zaRSIQLFy6watUqotEo09PTiKKI3+/H5XIRjUYJBoOMjY3R29tLaWkpo6Oj2Gw2zW2y
      2WycPHmSZcuWEQwGyc7OJj09nfPnz5OTk8PMzAxpaWnYbDbtTg+z+UB+vx+z2cwzzzxDLBZj
      YmICSZJISUlhdHQUWZa5evUqCQkJWCwWIpEI4+Pj2kvxHNL3v//979+H8/eVYS6J6n0ELM5c
      HOF+2jquMhqAopIyUhOTyM5L49bVFq5c7yOekMfiomzMkooomUlIsN5OahOQrE4yHRE6L7Uy
      Mh0nq7CQtNQs7Oo4HR1deA051K1egs0gosTjWJ2pJDrMxENWChelISoytoRkbJZ7v3/5/X5s
      NtuH9PY/KdFolJs3b9LS0sKVK1cYGxujpKSEtLQ0mpqaGBsbY9u2beTk5OByuTh69CjRaJTd
      u3fjdrt5++23Wbp0KaOjo5w8eZJFixZRU1NDZmYmN2/epK+vjy1btpCRkUFOTg5tbW10dHRQ
      V1eH0+nklVdeoaysjNzcXNLT00lOTiYpKYn8/Hx6e3s5duwYJpOJbdu2YbVa8fl82vvJ3OTf
      D3/4w7/Vk+E+Bl0Z7rNFVVVaWlpIT0+fdzHeDf39/czMzFBTU6NLI37e6Abw4KJLI+osePSX
      4I/hQZZGtFqtujTi/R6Ajs79RDcAnQXNg/ds/0JQUdX35TlmIxGzMoioqiaDqNUAa3EGAUFA
      kwucv//sPtwRk5jbbt42XyLmjkEQhA8d0xx3HsOdbXfq+Hywj7n2O7f5Xft/sI872+7c9oPn
      e25b3QDuASU4wYn3TtA/7kExJVFV18Dq4hSm+q7QdK6NaX8MR3YpmzdvxOLr4jevNxI02xGN
      SdQ99AjLMgTaTh2jrXcc1ZLK2s1rmLp4k8o9DSRH/DS+8hKmjU+wpSQD7/WjXDbXU190b/Wz
      nxeKotDZ2cmxY8fIy8tj7969eL1e/vmf/5lQKEQoFEKSJJ577jneeOMNgsEgwWCQwsJCvvOd
      72jvHl6vlxdeeAGHw8G3vvUt+vr6aGpqwufz8e1vfxu/388vfvELXC6XVnD//PPPz8sL8ng8
      /OQnP6GwsJCnn36aCxcuaFmqNTU1PPHEE1y6dIk333wTQRD4+te/Tnl5OaAbwD0QZ+hSC8Li
      jfz+I1kY5RD+GMh+F+03J1nz8NPkOS1Egj4UCaKGBGoaHqdiWSHh0RYar4+RH5phzFTC019/
      FJMaIRoXsDjbGPOCTfJjT0jA7YsAMUaH4mRv+nJd/HMkJCSwfft2XC4XAElJSTz//POoqsq1
      a9cYHx+nqqqKqqoqVFWlubmZhISEeaHX69evk5GRoSXKWSwWNm/eTGtrKwBOp5Pvfve7ANy8
      eZPe3t4PLbbd1tZGaWkpkiQRjUYZHBzkG9/4Bk6nU0uduHLlCn/1V3+F3+/nyJEjFBcXA/o7
      wN0T99DlT6GuLAvFPcjlazeZCcTwzQRJyMwhJ1HkVt91bgyME1Xm7yoIIoIQY3hMYUl5AXaj
      iNFkxW6zkFqQyuTAJNGZPsSl67FPTBCKTjIkZFHwJVwsUhRFSkpKSE5O/pB7Jssy165do6ys
      TGubnp5mZGTkQ8pwQ0NDrFu3TpuRzsnJ0ZLl7iQSiXD16lUqKirmZZWOj4/j8XhYvnw5giBg
      NBrJzs7mwoULHD9+nMTERBRFIScnh8TERLKzs3E4HAQCAUB/Atw9qkL8ti+pxKykmigAACAA
      SURBVKP4xke4FZFYlSbdlkZUiEbCjA0NoNpyKTAG6Dh5jIsXHRjNiaxo2Ix60/Ohbo1JuRgG
      Rxj3e0mprsUw2UP/iBlSk79yP9L4+DiAlrsD0NfXR25u7ry7fyAQoK6u7hOJDkxNTQGQlpam
      tcXjcVpbW1m5cuW89wSDwYAsy4RCIU3U4IPvAnPbf9XO7f3HkMhi8zSXBmdYXVDKyirptjSi
      DX9PD5OhEorKazCJAdwABhuV6x9mSUUhBlHCaJBw+wQu3LxFdlIZRjVGLC5gNidhEC5xdSqf
      HQkGlEILb52bpLou/X4f8V0RjUY5d+4cGzZs0O7q8Xicvr4+rQprjsHBQV588UV8Ph9ut5vc
      3Fzq6+s/1OecWG55efm8eYvp6Wna29s5fvw4oVAIr9dLamoqAwMD7Ny5k6SkJF566SVCoRCj
      o6P4fD4CgQCBQAC73Q7oBnD3CGZKamu4efhd9p2UQTWQW1OHKTmTqrwRThzcTzQOkj2Rtbel
      ESWDEbPZrEkjphRXkHL8OK/tO49oSaZmfQMVWSYMAQ9+axV2AULObMIzZ0kwrbmvh/u7iEaj
      vP7667S3t+P1erl8+TJ79+4lGAxiNBpJT0/X3Jjr16/jdDpJSUnRcvRPnDjBpk2b+OEPf8jw
      8DCnTp1i48aNHD58mDNnzjA0NMTVq1d59tlncTgc2noBcwtoHD9+nJqaGv76r/8amDWmixcv
      sm7dOsLhsCalmJWVxaJFi5iamuJHP/oRgiDwxBNPYDbP+pV6LtA9oRKPRojGZqURjWYzBlEE
      ZKLhCHFFRZSMmM1GUBUUBSTDfLlzJR4lEo2hChImsxmDAPFYFFkwYDZKqKpMNBLHYDIhiZ99
      CPSzkEYMhUKatpAoithsNs29uNPVicViCIKgFbFcvnyZyclJNm/ejCiKWhWX2WwmHA4TiUSA
      2XDlXPq0LMvaWEdHR2lubmbPnj3a98y5OnN1BOFwGEVRtIUAZVnWZNTnRHp1acQFzP2URhwZ
      GSEtLe2epRGnbxdEOJ3OTzUWXRpR5wtHEATy8vI+VR+f9sK/E90APgZdGvHBRjeAj0GXRnyw
      0SfCdBY0ugHoLGh0F+ieUHH1X+bKjVvEzSmUL1s2K40oB7jWeomhqRCO7BKqK0uQguO0XWjD
      HROwOPNZXbMEk3+YM63XCcUFUvPLWV6ej4kYw93tXO2fRAFMSYuoX1/+odUjv8yoqqqFKOPx
      OOvXrycjI4NLly5x48YNEhMT2blzpzYJBbBv3z6CwSDJycls374dm81Ge3s7V65cYdGiRaxb
      t47p6WlOnjyJLMs0NDSQlZWl7R+NRuns7CQcDs+bRIvH4zQ1NZGTk0N5eTlut5t3331XE/Sa
      i0DpT4C7RiU4eImTXV7yllSxJC+FUDCIEvfRfrIJlzGLyuplZNhl/P4o4XAQbOksq64kLT7A
      2a5xotNTkFFM9bIlSFNdNLf1EZVjzASiFJRUsnz5cirLcr5ydydZljl//jxFRUUUFRVx4sQJ
      TeNnw4YNOJ1Ojh49qi2XBGC1WmloaGDNmjVYrVa6urq4cuUKtbW15ObmEgqFOHnyJEVFRZSU
      lHD48GFtngBmF9WbmJhgeHhYa1NVlcHBQZqbmxkeHiYajXL48GEKCwtJSEjgvffee3/l+i/u
      9DwgqEGuXgtQv20jmab50oj+pDzWVZXdlkacxe0SSUhKIzsnjzxnjKGzPrCLOJzp5OQmkel0
      cK71Ct5AKqLJRlpGFmlJX81CdUmS2LNnD4IgMD4+ztjYGE6nk7Vr1xKJRJiamvpQbn9FRYWW
      mQmzq0Zu2LBBa/P5fIiiSEFBAUajkaGhoXn7r169mmAwSGNjo9bm9/u5dOkSGzduBMDtdmMw
      GFi3bh2xWIxf//rXBINBQDeAuycWZEKwUWN4Xxoxa/lGVn1IGlFl3ZZHyRIVwoEA01Mu3H03
      MKZUAyGtO8loQhQl5Fic8Hg3b565hGQUsaRX8vijtVjv35HeNXNyiaOjo5w7d47a2loALl++
      zP79+ykrK+ORRx6ZF3n61a9+hSAIrFu3ji1btjA+Ps6NGzfw+/1UVVXx8MMPs3jxYn7xi1+g
      KAoPPfTQf6hkoSgKV69e1TJRPR4P0WiUpKQkbTZaFEXtKaIbwN1iMJP8SaURowqYIgxdb2N4
      NJnEzFLWVafD4PsLOMvxGKqiIBkNWDIX8/iayq/sE2Bulfbe3t55fvayZctYsmQJ165d4/Tp
      0+zatUsTGvjbv/1bIpEIv/nNb7h58yZpaWns3LmTzMxMDh48yNWrVxkeHuYb3/gGkiRx8OBB
      ysrK5i12fSdut5sjR46Ql5fH9PQ00WgUh8OBz+dDVVVt5ci5XCDdAO4WMYHKEiPHTnawbvki
      VPcMkZgVmzMF8+UuOnpTKU2zM+32QxogWSlbuekOaUTwoxIO+vG44wxfbyMo5eOwGRiTowR8
      XowYECUz9gTLV+olLR6P09HRwYoVK/D7/Vpl2OTkJNnZ2aiqisfjQZZl7Q48OTmJ0WgkGAxi
      tVopKCjg6tWriKJIPB7HYrEQDAaZmZnBYDAQCoVQFIVAIIDFYiEcDjMzM0MgEGBqagqTycRT
      Tz2FLMvcuHGDYDBIfn4+165d48qVK3i9Xk0RA/RkuI/lo4WxFIavnKH1xjiqxUlFzUpKMhNR
      ozNcON3MrZkoibmlrK6pxBR3M+OHrCyndjFHXD0cO9dJICaSWVTNmuoizETpv3yethvjyIDZ
      Wcb2LdV8XrVgn4cwVjgcZt++fbjdbmB2Ncfdu3fT3NxMX18fiYmJPPnkk4RCIQ4dOsTTTz/N
      gQMHcLvdbNq0iaqqKmKxGKdOneL69eusWLGCNWvWMDQ0RGNjI4qisHXrVnJycti3bx+PP/44
      nZ2dtLW1AWA0Gtm1axdFRUUADA8PEw6HKS0tZXp6mtdffx2LxcLevXuxWCy6MtwnQVeG+2yZ
      k0ZMS0ujoKDgnqURp6enWbFihS6N+HmjG8CDiy6NqLPg0V+CPwZdGvHBRn8C6CxodAPQWdDo
      BqCzoHnwnNsvACU4QdPR4/SOzqCYkllev4VVxU6m+6/QdKaFSX8MR3YZDVs2YvF28ZvXjhAw
      2RDNKWx4+BEK/O3829FOJEQkayLrdjxB7sxJWgzr2b7EAUzw3nsutm2rvN+HelfE43Feeukl
      urq6EASBzZs3U19fz8GDB2ltbdXW9KqoqEAQBOLxOH//93+vLbS9adMmfvnLX9LX14csy3i9
      Xv7yL/+SwcFBjh07Rjwep6Ghge3bt2uSK5OTk7z88ssMDw9TXV3Nnj17uHDhAseOHUOSJHbs
      2MH69eu5cOECr7/+OoIg8Md//McsWbJkdtCqzl0SU/tP/lY92jWihmKyGg8H1BlfQI16RtQj
      hw6r/ZMBVVZkNehzq/5QTJ0e61XbO3rVmCKrvuHz6htHu1Xv9Qvq+aGZeb1OXT6kHuny3v7f
      uNrY2Pm5HsXAwIAaiUQ+0z5lWVbHx8fVaDSqjoyMqD/72c/U7u5udf/+/WosFlOHh4fVl19+
      WY3FYqqqqurY2Jjq8XjUUCikHjhwQB0eHtb6crlc6ltvvaWOjIyoL730kjo5Oal6vV71l7/8
      pRoIBLTtDh06pDY2NqrRaFQNhUKq3+9X9+3bp05NTamTk5Pqr371K3ViYkJ94YUX1JmZGXVo
      aEj9xS9+oYbDYRX0J8DdE/fQ5UtmS1028swwXbe8ODLzUUNB7Jm55CaKjPbfwB2RyC2wz9tV
      lCRm523ijPVdp3PGhiAZySoofSB8UVEUMZvNXLx4kRs3brB06VLS09OJx+OcPHmSqakplixZ
      ot29rVYrZ8+exWq1MjMzw8TEBLm5uZq2aG5uLqmpqaSkpHDu3DkAMjIytByjeDzOyMgIpaWl
      XLhwgZycHDIyMgiHw5w5cwaHw8Ho6CjDw8Pk5OSQlJREYmLiPGnEB+G8f7GoCnF19sQp0RDT
      IwNc6R8mJsuoyuzn4VCA4f5OBiYiEA9w+dTb/OrffsXrx/opXpwFqESCfrxeLz5/gJj84MxF
      xmIxvF4vVqtVkyS02+3MzMwQiUTmFeInJiYiiiJerxd4XwI+GAwyPDzM4sWLEQQBs9lMMBjE
      7/cTj8e1egJFUYhGo7hcLsbHxzl06BBTU1Ps2LFDW2RbURREUfxISXbQnwB3jyGRMvM0l4bd
      rMorY/VyA22TMRKSbfhv9jAVKaF46QrMUkiTRixfu53FSwsxiAZMJgOBG0YKK1exJi9Z69Y9
      ZSM2PklUthMfv8W0em/Ll95PYrEYkiSxfft23G43Bw4cwGKxIEkSu3btYmZmhjfffJPq6mos
      FguqqrJ161Z8Ph/79+8nJycHRVFoa2ujvLwcu93O5OQkY2Nj7N69G6PRyL//+78zMzNDeno6
      RqOR/Px8iouLtWIZj8dDWVkZ27dvZ2hoiJGREXJycmhpacHv9+vSiJ8awUxp7XIOHX6XV08q
      oEpkV6/HnJzJspxhTrz9GrE4SDYHqzcYQBUwGM1YrVbev6TDtL33a7oNBkRzAis3PkxRZhnm
      tvd45eXTgImK+m337xjvkXA4zKuvvsr09DSCIFBSUkJhYSGdnZ384z/+I6qqsmnTJhRF4ciR
      I9TX1/PTn/4Un8/H5s2bSUtLw+fzMT4+zvbt2xEEAYfDgc1m4yc/+QmqqlJUVERCQgLHjh2j
      urqaqqoq3nzzTd544w0yMzNZu3Yt586d48yZMyiKwvbt20lNTaW0tJQf//jHCILAnj17dGnE
      T4dKLBIiEpVBkDBZzBglCVSZcCg0K41oMGExmxD4sDSiEo8SDEdmF4MRBMwWG0ZJIB4NE4nG
      QTJitZg/F0nEOT4PZThVVQkGg0SjUURRxGq1YjQaiUQihEIhRFEkISGBrq4uJiYmaGhowOv1
      IggCCQkJSJKkuTVms1lTc47H45rPbrPZmJ6e5tSpUzz22GMYDAbtOy0Wi7YqfCgUwmAwaIuB
      y7KsVZclJCTMuUV6MtxC5X5KIw4PD5Oenn7P0ohzUumpqamfaiy6NKLOF44gCOTn53+qPj7t
      hX8nugF8DHMKag8aujTiLLoBfAwPsgHo0oj6PIDOAkc3AJ0Fje4C3RMqkwNXuNozStyczJLK
      ZeQkW0EOcL2tleHpEI6sYpZVFCOFxum42DErjZiSz6rlZRj9LqaMKWQ7zBCPMDw2QUp6JsHJ
      CQxJ6aQkmJFjMaZcLpJzcviqlKwoikJrayvXr1/HbDZTV1dHSkoKLS0t9PT04HA4ePjhh7HZ
      bNo+R44cYWxsjMrKSmpqarQVY86cOUNiYiKVlZWIokgoFOL06dMsXryYgoICbf9oNMrly5cJ
      h8PU1dVp7fF4nFOnTpGdnc3ixYsZGBjg9OnTpKSksG3bNm0eQH8C3DUqwaEWmq7MkF2ylJKs
      JAIBP0rcR8epk4yLaSypKMdpieHzRwmHAsgmJ+UVS0iJ9HLm2gTR6TFGveHZ7uQwQ0OD+CMx
      JoaHmPbNtiuxGOMjI3yVXlMVRSEcDrN8+XLS09M5evSotixRbW0tiYmJ86QR4/E4NpuN1atX
      09XVxdDQEKqqMjQ0xNmzZ+nv79fSFnp6ejh9+jRjY2PzvrOjo4OxsTEGBwe1trk+Tp06xdDQ
      EFNTUzQ3N1NTU4Pdbuf48eO6NOI9owa52uWnfvuHpRG9jlzWL1/yAWlECUdKOrl5BRSkyQyf
      9YLtozr+6mMwGKivr0eWZS5fvsz09DROp5P169cTiUTweOYvDytJEnV1dSiKwtDQEKIoEgwG
      aWtro66uTssR8ng8XL9+ndra2g+Vp/4uacSLFy+yYcMGBEHA7/djtVopLy/XpRE/NR+URmzu
      m5VGTI1jNr4vjdg9Beu27CZTnE18c89M4e7twZi8DJjm0qEDtAsiKDGClmyKv1qp/7+Tvr4+
      Xn31VVJTU9m+fTswK4346quvsnjx4nnSiIIg4Ha7aW5upqCggKysLK5du0ZGRgZpaWl4vV7i
      8Tjt7e1UV1dr6w//R8xJI5aWliIIAh6Ph6ysLCRJ4gc/+MG82WLQDeDuuS2N6JZV0j4kjehH
      /aA0ojHMQNclBoaTScoqY11VBgyOs+rhvazMTYKIhzMtlwEQEFC4vQi3GiIcvp8Hem8UFRXx
      ve99j56eHs6ePUt+fr4mjdjV1UVzczOPPPKIdic/e/Ysy5YtIz8/n0AgwMGDB8nNzaW9vR2X
      y4XNZuP06dMsWrSIoaEhHA4HeXl5ZGRkfOT3u91uGhsbyc/P16QRS0tL2bNnD3v27CEUCrF/
      /35NGU43gLtFTKCi2MDxU53U1RShetxEYhZszmRMnV109KVRlmHH7fajpgEGK4tXNXxAGvGj
      MJKeBBd7+km1FTHTcwmPreJzU4b7PAgEAnR1dVFQUICqqrjdbm7duoXH4yEnJwdRFJmZmUGW
      ZaLRKAaDgcLCQhwOBx6PB6PRyOOPP040GuXWrVtIksSiRYtISUnR1mpLSEjAarUSCoUwmUxE
      IhHcbjfBYBC3243JZOLxxx8nHo/T09NDMBjEYrFw69YtTCYTp0+fJi8vT5dG/KT8LmnEocvN
      tHSPoVqcVK5cTWlmImp0mvMnmxmZiZCUV8bqFZWYYm7cfsjKTtUiDuGJISZMaRQkWyEWonfo
      Fmk5i0g0x+ltPUdbrwt7Vhn166pJ+JxuUZ+HMFY0GuW9996ju7sbm83Gtm3bSElJ4cSJE/T2
      9pKUlMRTTz1FJBLh3Xff5bHHHuPFF18kGo1itVp55JFHNFlDl8uFy+WivLwcUZw9cz09PZhM
      JlJTUzVpxPb2dlpbW4FZacSvfe1r86QRQ6EQxcXFnDx5ktbWVkpKSti9ezeSJOnKcJ8EXRnu
      s0VVVS5dukRaWhqFhYX3LI04NTXFypUrdWnEzxvdAB5cdGlEnQWP/hL8MejSiA82+hNAZ0Gj
      G4DOgkY3AJ0FzYPn3H4BKEEXJ48d5+ataRRTCsvrG1hV7GRmoIumM5dw+aI4chazpWEDZt9t
      aUSjDdHsZOPDj1CR4wBCtLZeZ9GiJUQHz/Lm2U5U1YzZkUPD7ocoSv5yL5E9l3Lw3nvvkZeX
      x1NPPYWiKDQ2NnL69Gmi0Sh1dXXs3LmTn//859y4cQNRFNm5cydbt27V+vjRj36Ey+WiuLiY
      Z599lpmZGZqamvD5fHzrW99CkiTa29t54403kGWZJ598klWrVmnj6O/v58UXXyQQCLBt2zY2
      btzI8ePHtYW1a2pqePLJJ7l69SrHjh2jrKyMRx99VNtfN4C7Js5wy0Xkojr+4OFsDPEQ/piA
      HHDR2j3GioeepiDVQjjgRZEgJiVQ0/AEFcsKCY1corF77LYBgKrO/Uth494/pMKZzFjfBa5c
      GSG/vvhL/+OYTCa2bNmiFamrqkpubi5/8Rd/QTQa5eDBg9ok1z/8wz98KJigKArPPfccycnJ
      Wlq03W6nvr6e9vZ2TWXi2rVrfPOb3wSgsbGR6upqjEYjiqJw6dIlnnjiCXJycnj77bfxeDys
      Xr2ahoYGYrEYL7/8MuFwGIvFwpYtW/D758/D6y7Q3SLPSiPWl+egem/RfXMQXziOfzqAPTOH
      vCSRscGbDNyaJs78SRrJaPjYE24wGvkqSGKJosjixYtxOp3aZJQoilRUVGA2m+nq6mLRokWE
      w2FCoRDnz5+nvb193pyKJEkkJSUxODhINBolKyuLvLw88vLytD4jkQhJSUmkpaWRm5uLzWbT
      JFLi8TjxeJySkhKSkpLIysoiGAySkJDA1atXeeedd8jNzcXhcFBeXk5SUtKHjuPLfpP58qEo
      xG5LI0bDASYGb9LvV1mdLqGqAqgyQZ+H/sFBIqZMCk0BrjQ30daeiMFgpWrjQx/RqZtzb1/k
      kmjBZHWyumHZV/KHmUs9PnXqFKmpqVRVVaGqKkuXLmVsbIzp6WlcLhdbt27V5ApbWlqYnJxk
      06ZNH3mBzvV7p7ThXD3BnZ/N/T2nIzQnzjVXYDOnR/pBvorn+f5iSKTUNE3riJsVuYtZK5ho
      m4zelka8yXSklJLKVViMkVlpRMlG2aqGWWlEyYjFZEBRFNRoGK/PhyKKQCIrtj5MWYpzVlDL
      9NWcnZVlmbNnz1JcXExpaamW319RUYHT6WRiYoJ33nmHWCyG2WyePQ+qqml5fhRGoxGPx4Pb
      7UYQBEKh0Puyhrf3GR4eJiMjA5fLRWVlJbFYTHOBXnnlFSYnJ8nMzPzI/nUDuFsEM6W11Rw6
      cogDURVVEclathZzUiaV2UMc/+1ryIqAaLGzqn5WGtFktmK322ddm6if9vNNXBn0kFy4DJvd
      iBcRk9Wm/bBfBaLRKG+99RYdHR1awcpDDz1EY2MjDocDo9GI0+lk9+7dNDY2Mjo6iqIo7Nix
      Q3tZXrlyJSdOnODEiRNYrVZ2795NX18f58+fZ2BggJ6eHp588kkKCwv55S9/qa0TbDAYOH78
      ONXV1dTU1HDgwAEURaGmpgaHw8HBgwe16jKn04nRaOSVV16hs7OTQCBAd3c3e/bsAfRs0HtE
      JRoOEo7EQZAwW62YDBKocULBIDFZRTKasVrMCKqMrIDBaJh9I1AVwqEgkbiKxWrDZJRQYjEU
      ScIofnGvZJ9WGU5VVbxer6YtNCc5GAgEtHLDOR9/bsV4g8FAYmIiXV1djI6O0tDQgMfjQVVV
      TQc0Go0SvqMQIjExEUmStOqwxMREXC4XJ0+e1KQRfT4fsizjcDg0qcS5Pmw2G2azGZ/Pp41V
      kqQ5I9WT4RYq91saMS0tTcvJv1t0aUSdryy6NOJXjAdZGU6XRtQN4GN5kA1Al0bUJ8J0Fji6
      AegsaHQX6J5QmRrsouvmrDTi4qUVZN+WRuzuaGdkOoQjq4jK8iLE0ASdLZ14YgLmlDxWVpVi
      DNyicyDM0uVl2IQ4EyPjmJLTSLabCE4N0XG5h6BqonDJchZlOZAWkJfS19fHpUuXtES2srIy
      RFEkHA7T3NxMWVnZvJfoQCDAqVOnmJmZoaqqivLyctxuN2fPniUUCrFmzRoKCgoYHx+nqakJ
      g8HAli1bSElJAfQnwD2gEhpu5UTnJOmFZRSm2/H5/ShxP52nTjKqJlOyuJQkYwSvP0o45Ccu
      JVK6uITEYA9nr00QnZpgYOgKXQNeFFVmfHCQGX+EyORNjp+9RkJuCSWF2cQD00Tl+328Xywz
      MzMUFRVRWlpKc3OzNk/Q09NDU1MTo6Oj87Y/f/48ZrOZ8vJyWlpaGB0dpbm5GZvNRkFBAUeO
      HGFqaoojR45QWlpKdnY277zzDqFQCNCfAHfP/9/emQRHcZ4N+OlZelbtSEIzQrsEM0gsQsJG
      GEkII2wcG9nGFf+pyiVVySGXVOWQqlxyTA7JJecckqq/ggnObyByjFiMQIAsQAJrQfuGNrSN
      RrOv3f0fBB0DTiggGAPz3DTqHvWn6re/7n7f73mVIP39Pmr272H9A2pET5Kdmm2Oh9WI6dls
      yMunIEvhVIcXzFrWF5fhvz2AL6fi7pZxpqdWKN5ezUZb2nc8qO8PlZWVKIrC7OwsVqtVtbsN
      Dg5+qxqxrq5OnSHueUMlSaKoqIj09HSmp6eJxWJoNBpVjbiwsJBok/rExIIsCGa2fkONmLNt
      D5XpD6gRVwRe33uQbGEta+z1uFkdG0WXWg6EMCRnkRVYZWp5LcOJHGc1LmMXDXhn+jjX1okm
      u4J9tTtIejFLg54Ij8fD0aNH8fl87N+/H6PRyLVr16ioqGBxcfGh7e/pFS9fvkxxcTHZ2dk4
      HA4+++wzAoEAe/bsITMzk/Lycv7whz+g0+n44IMP1P5kiQB4XHQGUqXQt6sRYw+oESNrasTJ
      vmuMT6aQsr6UXVVrakRB0FPszOPL9mGMRj1WQYtFAH80Sk5uOYc+KGKw/xbxVyxPn5KSws9+
      9jMWFxdpbW0lHo/T3t5OYWEhU1NTWK3W+9SILpeLq1evUllZic1mIxKJ0N/fz+HDh0lOTubk
      yZPY7XaGh4f55S9/STQa5YsvvsBmswGJAHh8NFacBRouXrnF7u2FKF4PkZiIOT0dfW8/fbez
      KM2y4PH4kTNYUyNW7f1WNaJgycGRM8ipLg85ZZvZkGPhfE8fVtNWzJIPf1j+NwfxchKPx+nt
      7cVms6EoCqFQCKvVyttvv40kSUQiESwWCyaTiXA4jF6v58aNG+Tn52OxWNQ2qIFAAL/ff19d
      0L0G2bFYjFAolNCjPzkaUjfVUBm7zOWzA8jGDMp3VKMzJLOzfhcdFy9z6lqElA1l7NxoQIwn
      kZbGfUtjdMkZZIgioCWraAfOxW5MJhFrdjm1Si+XzrcQFoyUbn39makRv49oNBq1hFmWZWpq
      aigpKVFr+ZOSkhBFEa1Wy1//+lfeffdd9YoOYLFYaGpqoq6ujtOnTxMMBtmzZw+bN29GFEU+
      +eQTdDodhw4dIjU1FUhUgz6ShBnu+8fExATLy8tUVVU9tRrxFbq+JHhZKCwsVAW4T0siD5Dg
      lSYxAzyChBrx5SYxAyR4pUkEQIJXmkQAJHileflubr8D5NAyVy5cYHRmBUlMZdsbe6ksTMM9
      Pcil9k4WvVGSbWXU17+B0TdI8/+dxS+a0BrWsefAAXL9PRy9ssD+w+9RYI3TfaWLpOIKrEu3
      ceXk4Fi37nkP8YlQFIXh4WH+8Y9/4HK5ePPNN6mrq+Mvf/kLQ0NDD6kRAY4cOYLL5eKnP/0p
      RqORiYkJjh49itfrZe/evezevZuzZ89y9epVAGpra2lsbFRzA8PDw/zxj3/EYrGQl5fHxx9/
      TFdXF21tbUiSxPbt2zl8+DAtLS2cPn0ao9FIVVUV77//PpAIgCdgTY0YzXudj/fb0MdD+GIg
      BZb4enCOrfs/Ij/DRNjvRdZBTGtha33TmhpxppNzQ/Pk2gzkFicx0TuO7fU8FHmtN6SiKMgv
      cFpGkiSuXbvGW2+9hcPhUHMoBoPhW9WIsNbnd2RkRP25u7ubt956i9zcj5iNCwAADwJJREFU
      XP75z38SDAapqanh4MGDBINBPv30U1W3CGvl0D/60Y/YvXs3sLbSrbKykrq6OlWNGAqF8Pv9
      /OY3v2HdAxeXxC3Q4yJ5GPSmsNthB988oxMzBCIyfncAc7adDak6FqcnmF5wIz2gRtQZRDR3
      z+9020aMkVnmV0PPYRDPhkgkQiAQIBgM0tPTg9/vJxwOEw6H6erqore396GkYk5OjtoET1EU
      IpEIxcXFpKenk52dTTQaxWq10t3dTUtLCyUlJWohG6w105ufn6erq4ulpSVVrzI0NERLSws2
      mw29Xo/P52NwcJCbN2+qakVIBMDjI0tEFdAC8aCHufFhusemicWlNTWiHMe36mJ06AYTC2GQ
      AvR/dZqjnxzlxPkxCkvXA6AxJOHMtdI/Ns+Le82/H1mW8fv9TE1N0d/fz4kTJxBFkdLSUqam
      pvjqq6+4fPnyfWrDb+ObAXFv8f78/DwajQaNRsM3ixcKCgpQFIXBwUGam5txu93E43G15Fmn
      0yEIAhUVFczPz9Pb28upU6cSjbKfGF0KxfoVvp7zsN22iV1aI18vRbGmmPCPT+COllBSUY3J
      GLurRjRRvH0PpZvy0GtFTCaRwAiAQHLRZrLPnWYomExV6fMd1n8Do9FIXl4etbW1WK1Wjhw5
      QiQSYcuWLaSlpT2kRnwQQRDQ6XTMzMywfv163G63ut3BgwcJh8P87W9/o7y8nIyMDGRZJjU1
      lffeew9Zlvn8889xuVxkZmbS0NCg1hUtLCxQVFREVVUVoVCIY8eOqbNAIgAeF8FA6WsVa2rE
      OCALZDl3YkhdjzN7hgtfHEdWBASDicoaHSgaDEYzSUlJD1mfBY2Z4vIirnxylejr1YCHG+du
      0KcxYcrbznu7yp7DAJ+ce42tjx49SiwWIy8vD0mSOHPmDIuLi0iSRENDA7Isc/78eXbu3Mmf
      /vQnJiYmVLWi0+mkubkZWZbZvHkzWq2W5uZm9Ypus9kwmUy0tbXhdDq5desW3d3dxGIxbDYb
      6enptLS0MDs7i6IopKSkqNtPTEwgyzJbtmwhKWlNUZ8ohnsiFKIhP8FwHEWjxWS2YLirRgz4
      /cTiClrRgNlsQqNIxGXQ31MjAnIsSlzQIeo0KHKcQCCEaLaglaL4g0EkGTSimVTrs+sT/yzM
      cIqiIEkSXq9XVRUaDAa1FFmn05GamsrQ0BCzs7M0NDTgcrnuUyOKoqjun5ycjE6nIxAIEAqF
      1G08Hg8XL16kqakJQF02mZSUhNFoVJ9DALWzfDgcxufzIQgCqamp6PV6BEFIqBFfVZ6nGnF6
      eprMzMwnViMuLy8DPPRG53FJqBETfOcIgkBeXt5TfcfTnvjfJBEAj+BlNsMl1IiJAHgkL3MA
      JNSIiTxAglecRAAkeKVJ3AI9EQqu6UGGxueJiymUOhysTzGBFGSkt4c5dwhrdgHOjQVoQkvc
      +rpvTY2YamdbeTH6wBydfWOEYwqWjA1UlJegk9y43Xqys63Pe3BPjKIojI2NqWrD/Px8du3a
      xfT0NNeuXUOv19PQ0EBycrK6T2trK4uLi2zatAmn08nFixdV/4/BYKChoQGtVsvly5dRFIU3
      3njjvmZ60WiUgYEBIpEIO3fuVD+Px+N0dHSQnZ1NaWkp4+PjdHR0IAgChYWFVFVVAYkZ4AlQ
      CM1+zcXuRdLshdjTTXh9a2rEviuXmI0nkV9UgFUbuqtG9BHBTEFRPmb/CFeHloi6FglZsygu
      KkDnHeXGwBzByDKzs77nPbinQlEUxsfHWbduHdu2bSM/Px+Xy0VXVxclJSUkJydz4cIFVUkS
      j8fRaDQ4HA56e3uZm5ujpKSEbdu2sXHjRtxuN+FwmEuXLqmFdG1tbfeVQnR3dzM1NcXY2Nh9
      xzE7O8v58+eZnJxEURT6+vrIzc1l69atbNiwQS23SMwAj4sSpP+Wh5rG2ofUiKtWG7u3OR9S
      IyZn5JBfkI92vcCpDg/kaknLspNvTyEzxcStoXmivDgN8v4d92p3KioqyMnJUT+7V3o8NzdH
      X1+fur1Wq6W2thZZlllYWECj0aji27GxMYqLixFFEUmSqKurQ6/Xc/z4cUKhEGazGYDq6mqC
      wSDnzp1Tv9fv93P9+nVqa2sRBAFJkohGo+zYseOhRoSJAHhcYkEWBMs31IiT2LbtoTI99pAa
      cdfeg2QJCtFICL/Pw+rYGNoUJxAkEg7i9wnM3x4iZChEJPK8R/bU3JsBLly4QGZmJm+//TZO
      pxNZlhkeHmZkZITdu3ertfyCIOD1emlvb8dms7F+/VqhoCRJjIyM4HQ6ATCZTOh0OtUJFAwG
      1QB4EFmWGRwcpLCwEK1Wi8fjQZIkFhcX+e1vf0tycjIffvghxcXFQCIAHp+7akTPA2pE/X9Q
      I070fMXoWAopOWXUVGfD1BTD1y4woxdJz3XwelUecmjk0X/7e45Op+PnP/+5mu09ffo0JSUl
      DAwM4Ha7aWxsfKgIrr29HYfDQV5envpKdmZmBkVRsNvteL1eIpEIkiQRj8dRFOU/ZpA9Hg9f
      fvklBQUFLC8vE41GKSsrU49rZWWFEydOqMm0RAA8LhoLjnyBtvZ+9lQWofh9RGI6TGlp6Hr6
      uTW9nrIsC15vADkd0JnYWL3vATWikYrag1Ta//Uw51MUpFiUUCiERqtDr9ejecFe0YfDYTo6
      OigvLycQCKDVanG5XExOTlJfX6+ewKIoqsbm4uJiMjIyCAaDGAwGdVVZRUUFWq0Wk8lEJBJh
      dHRU3d9oNBKNRtHpdMRiMYLBINFolEAggCiKHDhwQM1x3PvdpUuXKC8vV+uB7j1TJGqBHsG3
      m+Fkpnou0Tl4B9mYQUXVa5TlJKNEV/jqQhszKxFSNmzk9R0ViHE3bh/k2NapbxzCC1MsiJnk
      p/3rShb23ebC5+24gWT7Jmpf207SwxXD/zWehRlOURRu3rxJW1sbZrOZd955B4CTJ0/i8XgA
      cDgcVFdXc+bMGZqamvjzn/9MJBLBbDbzgx/8gKysLEZGRigvL1frlFwuF8ePH0cQBD744AMM
      BgNHjhyhqamJmzdv0tnZCYAoijQ1Nam3N1NTU4RCIUpLS+nr6+Ps2bMYjUY++ugjsrKysFgs
      iWK4R5FQI/53URSFzs5OMjIyKCwsfKJM9MTEBEtLS1RXVz+1GjERAI8gEQAvLxaLRUjkARK8
      0iQegh9BQo34cpOYARK80iQCIMErTSIAErzSvHw3t98BcshF+8ULjEy7kAxpbNtdT2VhGqsz
      Q1y6cp0Fb5Rk+0bq63dj9A7y+Wdn8enNaI3rqD1wgFx/N//7ZQ+CosGybgM19XspStezNN5N
      W0c3rqBMZuEWGmqrSTW8ONkwWZbp6emho6ODnJwcDh06RCAQoLW1lfb2dhRF4Yc//CFbt25F
      EATi8Ti/+93v8Pl8lJeX8+GHH7K0tKSqERsaGqivr6e1tZWWlha0Wi0Oh4Mf//jH6nPZysoK
      x44dY3JykoqKCt5//33MZjNer5ff//73vPbaazQ2NnL16lXOnDlDNBpl//791NfXA4kAeALi
      zN68Tjh3Jx+/aUcfD+KNCkiBJW4OzFLx5ke8u85E2O9B1q6pEbfUNeEszyM408mXg3ew2wxU
      vfM/VNuTWZzopm9wjPWVdgZG59je+EMK0zWMd53n5pCLui3rXqhpWhRF9u3bp+oOJUmisLCQ
      xsZG3G43ra2tlJeXq8KqX/3qV2i1Wj777DPm5ua4desWBw4cwG6388UXX7C6uko0GuUXv/jF
      t64lvnHjBkVFRfzkJz9BkiQMBgOyLNPZ2YndbsdkMqEoCmlpafz6179GURROnDihWiNepP/t
      9wPJy4AnhTccuQj+Bcan7hCOKQTcQczZdvLSdCzN3mZ2yYt8X5JGQG8wqmrEe+hFE3qNQji6
      gs5cRG6mBY3OhN2xBe3CJOHvdHBPh0ajwel0kpGRoX6WlJSE0+kkEokwNDR0X9M7rVbL2NgY
      Z8+eRRAE7Hb7fWrErKwsfD4ffr+fsbExenp68Hq96nfH43FmZmZISUmhr6+PlZUVFEVhcnIS
      v9/Pjh07EAQBURTZvHkzGo2G0dFRsrOz1WK6xAzwuMhxIgpoBQgF3EwNjRDOjLEzS6uqEVdd
      CwxPzRDQrCNfDDJw9Qp9t5LRCHocu/dDcIGe1mZG9XoM5lQ279yDqMyhKBruxYwgaECRX3ht
      oiAI+Hw+zp07R0FBgXr7c4+ZmRm8Xi/JycnqOgGNRqNuIwgCJSUljI6OMjExQV9fH4cPH0YU
      RWRZJhKJMDExgaIoXL9+ncbGRgYGBqisrFQX1giCQDQapbW1FYvFwt69e9UgTATA46JLpljv
      pueOl605DnZXm+5TI65GSyjb8hoWk3RXjWikcMsuSsry0OtFzCYjwVEDZVVvkOEeY15nx55u
      QoymIUe7WPYUk5MksDIzSiythGenxvpuCAQCnD9/ntraWtLS0tSFKACxWIyGhgYUReH06dOM
      jY2h0+mYnZ0lOzsbt9uNyWQiPz+fLVu2EIlEOHbsGH6/n/T0dPR6PXa7nY0bN1JQUMCZM2eY
      nJzk0qVLtLa24vV6kWWZjIwM7ty5w6ZNm8jLy1NPfkgEwOMjGCnbuZmWcy2MyRqQYJ2jGkNq
      No7MaVpPnQQE0BvYdleNaDRZSUlN+YYaUcCYlIZzUx3J/d3c7Blk2+Yi8rJMfHXmJDIKGmMG
      NQ22h3SK32fi8Tiffvopt2/fZm5ujqmpKWpqaujs7GR8fByAsrIy6urq6OzsxOFw8Pe//51o
      NIrFYqGqqgqDwUBzczOKorBp0yaMRiNtbW2Mj48Ti8UoKSnBarWq1Z0VFRU0NzcTi8VISUnh
      0KFD7N27F1h7PlhdXcVms3H8+HEGBgYAsNlsHDx4EEhUgz4hCpGgj0AoiqLRY7ZYMOp1oMTx
      e71E4wpagxGrxYygxJEk0Iv6b6gRI8QEPYa7asRQOIbBaESjxPH7/UTjCgZLEhajnmf1DuhZ
      qRGXl5dV35BGoyE1NVVdlAJrAt07d+4wMzPDvn37WF5eRpZlkpKSsFqtyLLM6uoq8Xic1NRU
      RFEkHA7j8XhUraHH46G1tZWmpib0ej1er1ftKm+1WtXbp0gkgizL6PV63G63elyiKJKWloZO
      pxP+H3sNaB3zGPEUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='55' name='buy in cash/gcd/gtd' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='buy_in_initial' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='counrty_cnt' width='192'>
      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
      wQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='104' name='currency_cnt' width='144'>
      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
      /g90i9Dx5YKLvAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='financial numbers' width='104'>
      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
      l71739UUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='game_count' width='192'>
      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
    </thumbnail>
    <thumbnail height='55' name='game_name' width='192'>
      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
      EB0djZubG/8DxMLEtKLEjWMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='game_type, game_brand' width='192'>
      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
      c589wf8BjvTVk2I8WQYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='gp_id, nickname' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='is_feature' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='is_null_chk' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='is_private' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='is_staking' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='jackpot_count' width='192'>
      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
      UaoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='jackpot_count_sub' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='ranking' width='192'>
      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
      bUTmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='38' name='user_session_id' width='84'>
      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
      w8RsEf4rAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='user_session_period' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
